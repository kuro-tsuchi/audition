"use strict";(self.webpackChunkaudition=self.webpackChunkaudition||[]).push([[62],{7650:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-7405f692",path:"/database/elasticsearch.html",title:"1. elasticsearch",lang:"en-EN",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.1. 定义",slug:"_1-1-定义",children:[]},{level:2,title:"1.2. Elasticsearch 的基本概念",slug:"_1-2-elasticsearch-的基本概念",children:[]},{level:2,title:"1.3. 倒排索引(Lucene 索引底层)",slug:"_1-3-倒排索引-lucene-索引底层",children:[]},{level:2,title:"1.4. 使用场景",slug:"_1-4-使用场景",children:[]},{level:2,title:"1.5. ik 分词器",slug:"_1-5-ik-分词器",children:[]},{level:2,title:"1.6. Rest 风格说明",slug:"_1-6-rest-风格说明",children:[]},{level:2,title:"1.7. springboot 使用",slug:"_1-7-springboot-使用",children:[]},{level:2,title:"1.8. 为什么要使用Elasticsearch?",slug:"_1-8-为什么要使用elasticsearch",children:[]},{level:2,title:"1.9. ES 的写入流程",slug:"_1-9-es-的写入流程",children:[]},{level:2,title:"1.10. ES 的更新和删除流程",slug:"_1-10-es-的更新和删除流程",children:[]},{level:2,title:"1.11. ES 的搜索流程",slug:"_1-11-es-的搜索流程",children:[{level:3,title:"1.11.1. Query 阶段",slug:"_1-11-1-query-阶段",children:[]},{level:3,title:"1.11.2. Fetch 阶段",slug:"_1-11-2-fetch-阶段",children:[]}]},{level:2,title:"1.12. 在并发情况下,Elasticsearch如果保证读写一致?",slug:"_1-12-在并发情况下-elasticsearch如果保证读写一致",children:[{level:3,title:"1.12.1. 对于更新操作",slug:"_1-12-1-对于更新操作",children:[]},{level:3,title:"1.12.2. 对于写操作",slug:"_1-12-2-对于写操作",children:[]},{level:3,title:"1.12.3. 对于读操作",slug:"_1-12-3-对于读操作",children:[]}]},{level:2,title:"1.13. ES 的性能优化,  深度分页与滚动搜索 scroll",slug:"_1-13-es-的性能优化-深度分页与滚动搜索-scroll",children:[{level:3,title:"1.13.1. 深度分页",slug:"_1-13-1-深度分页",children:[]},{level:3,title:"1.13.2. 滚动搜索",slug:"_1-13-2-滚动搜索",children:[]}]},{level:2,title:"1.14. es的数据类型",slug:"_1-14-es的数据类型",children:[{level:3,title:"1.14.1. 常用的数据类型",slug:"_1-14-1-常用的数据类型",children:[]},{level:3,title:"1.14.2. 复杂的数据类型",slug:"_1-14-2-复杂的数据类型",children:[]}]},{level:2,title:"1.15. 搜索的整体技术架构",slug:"_1-15-搜索的整体技术架构",children:[]},{level:2,title:"1.16. 1设计阶段调优",slug:"_1-16-1设计阶段调优",children:[]},{level:2,title:"1.17. 写入调优",slug:"_1-17-写入调优",children:[]},{level:2,title:"1.18. 查询调优",slug:"_1-18-查询调优",children:[]},{level:2,title:"1.19. Elasticsearch 对于大数据量（上亿量级）的聚合如何实现？",slug:"_1-19-elasticsearch-对于大数据量-上亿量级-的聚合如何实现",children:[]},{level:2,title:"1.20. ES 在数据量很大的情况下（数十亿级别）如何提高查询效率？",slug:"_1-20-es-在数据量很大的情况下-数十亿级别-如何提高查询效率",children:[]}],filePathRelative:"database/elasticsearch.md",git:{updatedTime:1649400266e3,contributors:[{name:"shorestraydog",email:"shorestraydog@protonmail.com",commits:1}]}}},5327:(n,s,a)=>{a.r(s),a.d(s,{default:()=>En});var t=a(6252),e=a(9548),c=a(8279),l=a(9038),o=a(3761),p=a(1718),u=a(5365);const _=(0,t._)("h1",{id:"_1-elasticsearch",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-elasticsearch","aria-hidden":"true"},"#"),(0,t.Uk)(" 1. elasticsearch")],-1),k={href:"https://www.kuangstudy.com/bbs/1354069127022583809",target:"_blank",rel:"noopener noreferrer"},i=(0,t.Uk)("https://www.kuangstudy.com/bbs/1354069127022583809"),r=(0,t._)("h2",{id:"_1-1-定义",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-定义","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1. 定义")],-1),m=(0,t._)("p",null,"ELK 是Elasticsearch,Logstash, Kibana 三大开源框架首字母大写简称.市面上也被成为 Elastic Stack.",-1),U=(0,t._)("ol",null,[(0,t._)("li",null,"Elasticsearch 是基于 Lucene 的 Restful 的分布式实时全文搜索引擎,每个字段都被索引并可被搜索,可以快速存储,搜索,分析海量的数据, ES 是 面向文档的,一切都是 JSON"),(0,t._)("li",null,"Kibana 可以将 elasticsearch 的数据通过友好的页面展示出来 ,提供实时分析的功能."),(0,t._)("li",null,"Logstash 是 ELK 的中央数据流引擎,用于从不同目标(文件/数据存储/MQ)收集的不同格式数据,经过过滤后支持输出到不同目的地(文件/MQ/redis/elasticsearch/kafka 等).")],-1),d=(0,t._)("p",null,[(0,t._)("img",{src:e,alt:"picture 1"})],-1),b=(0,t._)("p",null,"收集清洗数据(Logstash) ==> 搜索,存储(ElasticSearch) ==> 展示(Kibana)",-1),h=(0,t._)("h2",{id:"_1-2-elasticsearch-的基本概念",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-2-elasticsearch-的基本概念","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.2. Elasticsearch 的基本概念")],-1),y=(0,t._)("ol",null,[(0,t._)("li",null,"index 索引:索引是文档的集合, 索引是存在数据的地方,包含了一堆有相似结构的文档数据."),(0,t._)("li",null,"type 类型: type 是 index 中的一个逻辑数据分类"),(0,t._)("li",null,"document 文档:ES 中的每个文档可以有不同的字段,但是对于通用字段应该具有相同的数据类型,文档是 es 中的最小数据单元,可以认为一个文档就是一条记录."),(0,t._)("li",null,"Field 字段:Field 是 Elasticsearch 的最小单位,一个 document 里面有多个 field"),(0,t._)("li",null,"shard 分片: 当有大量的文档时,由于内存的限制,磁盘处理能力不足,无法足够快的响应客户端的请求等, es 可以将一个索引中的数据切分为多个 shard,分布在多台服务器上存储.有了 shard 就可以横向扩展,存储更多数据,让搜索和分析等操作分布到多台服务器上去执行,提升吞吐量和性能."),(0,t._)("li",null,"replic 副本: 为提高查询吞吐量或实现高可用性,可以使用分片副本.replica 可以在 shard 故障时提供备用服务,保证数据不丢失,多个 replica 还可以提升搜索操作的吞吐量和性能."),(0,t._)("li",null,'集群: 一个或多个节点(服务器)的集合,它们共同保存您的整个数据,并提供跨所有节点的联合索引和搜索功能.集群由唯一名称标识,默认情况下为"elasticsearch",为了处理大型数据集,实现容错和高可用性'),(0,t._)("li",null,"节点: 形成集群的每个服务器称为节点.它存储数据并参与集群索引和搜索功能.")],-1),f=(0,t._)("h2",{id:"_1-3-倒排索引-lucene-索引底层",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-3-倒排索引-lucene-索引底层","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.3. 倒排索引(Lucene 索引底层)")],-1),g=(0,t._)("p",null,"在搜索引擎中,每个文档都有一个对应的文档 ID,文档内容被表示为一系列关键词的集合. 某个文档经过分词,提取了多个关键词,每个关键词都会记录它在文档中出现的次数和出现位置.那么,倒排索引就是关键词到文档 ID 的映射,每个关键词都对应着一系列的文档,这些文档中都出现了该关键词.有了倒排索引,搜索引擎可以很方便地响应用户的查询.",-1),w=(0,t._)("p",null,[(0,t._)("img",{src:c,alt:"picture 1"})],-1),x=(0,t._)("h2",{id:"_1-4-使用场景",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-4-使用场景","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.4. 使用场景")],-1),S=(0,t._)("ol",null,[(0,t._)("li",null,"维基百科,类似百度百科,全文检索,高亮,搜索推荐"),(0,t._)("li",null,"电商网站,检索商品"),(0,t._)("li",null,"日志数据分析, logstash 采集日志, ES 进行复杂的数据分析, ELK 技术 ,elasticsearch+logstash+kibana"),(0,t._)("li",null,"商品价格监控网站,用户设定某商品的价格阈值,当低于该阈值的时候,发送通知消息给用户,比如说订阅牙膏的监控,如果高露洁牙膏的家庭套装低于 50 块钱,就通知我,我就去买"),(0,t._)("li",null,"BI 系统,商业智能, Business Intelligence.比如说有个大型商场集团,BI ,分析一下某某区域最近 3 年的用户消费 金额的趋势以及用户群体的组成构成,产出相关的数张报表, 某地区,最近 3 年,每年消费金额呈现 100%的增长,而且用户群体 85%是高级白领, 开-个新商场.ES 执行数据分析和挖掘, Kibana 进行数据可视化"),(0,t._)("li",null,"国内:站内搜索(电商,招聘,门户,等等),IT 系统搜索(OA,CRM,ERP,等等),数据分析(ES热门的一一个使用场景)")],-1),q=(0,t._)("h2",{id:"_1-5-ik-分词器",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-5-ik-分词器","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.5. ik 分词器")],-1),v=(0,t._)("p",null,"IK 分词器是中文分词器, 把一段中文或者别的划分成一个个的关键字 , 在搜索时候会把自己的信息进行分词,会把数据库中或者索引库中的数据进行分词,然后进行一一个匹配操作",-1),E=(0,t._)("p",null,[(0,t.Uk)("IK 提供了两个分词算法: ik_smart 和 ik_max_word ,其中 ik_smart 为最少切分,ik_max_word 为最细粒度划分! "),(0,t._)("img",{src:l,alt:"picture 3"})],-1),R=(0,t._)("h2",{id:"_1-6-rest-风格说明",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-6-rest-风格说明","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.6. Rest 风格说明")],-1),O=(0,t._)("table",null,[(0,t._)("thead",null,[(0,t._)("tr",null,[(0,t._)("th",null,"method"),(0,t._)("th",null,"url地址"),(0,t._)("th",null,"描述")])]),(0,t._)("tbody",null,[(0,t._)("tr",null,[(0,t._)("td",null,"PUT(创建,修改)"),(0,t._)("td",null,"localhost:9200/索引名称/类型名称/文档id"),(0,t._)("td",null,"创建文档(指定文档id)")]),(0,t._)("tr",null,[(0,t._)("td",null,"POST(创建)"),(0,t._)("td",null,"localhost:9200/索引名称/类型名称"),(0,t._)("td",null,"创建文档(随机文档id)")]),(0,t._)("tr",null,[(0,t._)("td",null,"POST(修改)"),(0,t._)("td",null,"localhost:9200/索引名称/类型名称/文档id/_update"),(0,t._)("td",null,"修改文档")]),(0,t._)("tr",null,[(0,t._)("td",null,"DELETE(删除)"),(0,t._)("td",null,"localhost:9200/索引名称/类型名称/文档id"),(0,t._)("td",null,"删除文档")]),(0,t._)("tr",null,[(0,t._)("td",null,"GET(查询)"),(0,t._)("td",null,"localhost:9200/索引名称/类型名称/文档id"),(0,t._)("td",null,"查询文档通过文档ID")]),(0,t._)("tr",null,[(0,t._)("td",null,"POST(查询)"),(0,t._)("td",null,"localhost:9200/索引名称/类型名称/文档id/_search"),(0,t._)("td",null,"查询所有数据")])])],-1),L=(0,t._)("h2",{id:"_1-7-springboot-使用",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-7-springboot-使用","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.7. springboot 使用")],-1),T=(0,t._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,t._)("pre",{class:"language-java"},[(0,t._)("code",null,[(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Configuration"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"class"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"ElasticSearchConfig"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 注册 rest高级客户端 "),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token annotation punctuation"},"@Bean"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RestHighLevelClient"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token class-name"},"RestHighLevelClient"),(0,t.Uk)(" client "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RestHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token class-name"},"RestClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"builder"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("\n                        "),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"HttpHost"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"127.0.0.1"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"9200"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token string"},'"http"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" client"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Autowired"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RestHighLevelClient"),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n\n\n"),(0,t._)("span",{class:"token comment"},"// 索引的操作"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 1,索引的创建"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testCreateIndex"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"CreateIndexRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"CreateIndexRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou_index"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"CreateIndexResponse"),(0,t.Uk)(" response "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"indices"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"create"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("response"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"isAcknowledged"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 查看是否创建成功"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("response"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 查看返回对象"),(0,t.Uk)("\n    restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 2,索引的获取,并判断其是否存在"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testIndexIsExists"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"GetIndexRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"GetIndexRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"index"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"boolean"),(0,t.Uk)(" exists "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"indices"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"exists"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("exists"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 索引是否存在"),(0,t.Uk)("\n    restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 3,索引的删除"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testDeleteIndex"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"DeleteIndexRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"DeleteIndexRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou_index"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"AcknowledgedResponse"),(0,t.Uk)(" response "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"indices"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"delete"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("response"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"isAcknowledged"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 是否删除成功"),(0,t.Uk)("\n    restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n\n"),(0,t._)("span",{class:"token comment"},"// 文档的操作"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 1,文档的添加"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testAddDocument"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 创建一个User对象"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"User"),(0,t.Uk)(" liuyou "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"18"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 创建请求"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"IndexRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IndexRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou_index"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 制定规则 PUT /liuyou_index/_doc/1"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"id"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"1"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 设置文档ID"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"timeout"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token class-name"},"TimeValue"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"timeValueMillis"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1000"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},'// request.timeout("1s")'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 将我们的数据放入请求中"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"source"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"toJSONString"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("liuyou"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"XContentType"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 客户端发送请求,获取响应的结果"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"IndexResponse"),(0,t.Uk)(" response "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"index"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("response"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"status"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 获取建立索引的状态信息 CREATED"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("response"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},'// 查看返回内容 IndexResponse[index=liuyou_index,type=_doc,id=1,version=1,result=created,seqNo=0,primaryTerm=1,shards={"total":2,"successful":1,"failed":0}]'),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 2,文档信息的获取"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testGetDocument"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"GetRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"GetRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou_index"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token string"},'"1"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"GetResponse"),(0,t.Uk)(" response "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"get"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("response"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getSourceAsString"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 打印文档内容"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 返回的全部内容和命令是一样的"),(0,t.Uk)("\n    restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 3,文档的获取,并判断其是否存在"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testDocumentIsExists"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"GetRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"GetRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou_index"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"1"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 不获取返回的 _source的上下文了"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"fetchSourceContext"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"FetchSourceContext"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token boolean"},"false"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"storedFields"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"_none_"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"boolean"),(0,t.Uk)(" exists "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"exists"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("exists"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 4,文档的更新"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testUpdateDocument"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"UpdateRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"UpdateRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou_index"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"1"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"User"),(0,t.Uk)(" user "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"lmk"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"11"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"doc"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"toJSONString"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("user"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token class-name"},"XContentType"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"UpdateResponse"),(0,t.Uk)(" response "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"update"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("response"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"status"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// OK"),(0,t.Uk)("\n    restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 5,文档的删除"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testDeleteDocument"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"DeleteRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"DeleteRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou_index"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"1"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"timeout"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"1s"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"DeleteResponse"),(0,t.Uk)(" response "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"delete"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("response"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"status"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// OK"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 6,文档的查询"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 查询"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// SearchRequest 搜索请求"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// SearchSourceBuilder 条件构造"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// HighlightBuilder 高亮"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// TermQueryBuilder 精确查询"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// MatchAllQueryBuilder"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// xxxQueryBuilder ..."),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testSearch"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 1.创建查询请求对象"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"SearchRequest"),(0,t.Uk)(" searchRequest "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"SearchRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 2.构建搜索条件"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"SearchSourceBuilder"),(0,t.Uk)(" searchSourceBuilder "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"SearchSourceBuilder"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// (1)查询条件 使用QueryBuilders工具类创建"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 精确查询"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"TermQueryBuilder"),(0,t.Uk)(" termQueryBuilder "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"QueryBuilders"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"termQuery"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"name"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"liuyou"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"//        // 匹配查询"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"//        MatchAllQueryBuilder matchAllQueryBuilder = QueryBuilders.matchAllQuery();"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// (2)其他<可有可无>:(可以参考 SearchSourceBuilder 的字段部分)"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 设置高亮"),(0,t.Uk)("\n    searchSourceBuilder"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"highlighter"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"HighlightBuilder"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"//        // 分页"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"//        searchSourceBuilder.from();"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"//        searchSourceBuilder.size();"),(0,t.Uk)("\n    searchSourceBuilder"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"timeout"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"TimeValue"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"60"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"TimeUnit"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("SECONDS"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// (3)条件投入"),(0,t.Uk)("\n    searchSourceBuilder"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"query"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("termQueryBuilder"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 3.添加条件到请求"),(0,t.Uk)("\n    searchRequest"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"source"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("searchSourceBuilder"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 4.客户端查询请求"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"SearchResponse"),(0,t.Uk)(" search "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"search"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("searchRequest"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 5.查看返回结果"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"SearchHits"),(0,t.Uk)(" hits "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" search"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getHits"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"toJSONString"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("hits"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"======================="'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token class-name"},"SearchHit"),(0,t.Uk)(" documentFields "),(0,t._)("span",{class:"token operator"},":"),(0,t.Uk)(" hits"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getHits"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("documentFields"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"getSourceAsMap"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 前面的操作都无法批量添加数据"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 上面的这些api无法批量增加数据(只会保留最后一个source)"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"test"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"IndexRequest"),(0,t.Uk)(" request "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IndexRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"bulk"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// 没有id会自动生成一个随机ID"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"source"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"toJSONString"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liu"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token class-name"},"XContentType"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"source"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"toJSONString"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"min"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token class-name"},"XContentType"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    request"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"source"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"toJSONString"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"kai"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token class-name"},"XContentType"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"IndexResponse"),(0,t.Uk)(" index "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"index"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("request"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("index"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"status"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// created"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 7,批量添加数据"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 特殊的,真的项目一般会 批量插入数据"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token annotation punctuation"},"@Test"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"public"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"void"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"testBulk"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"throws"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IOException"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"BulkRequest"),(0,t.Uk)(" bulkRequest "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"BulkRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    bulkRequest"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"timeout"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"10s"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"ArrayList"),(0,t._)("span",{class:"token generics"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},">")]),(0,t.Uk)(" users "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"ArrayList"),(0,t._)("span",{class:"token generics"},[(0,t._)("span",{class:"token punctuation"},"<"),(0,t._)("span",{class:"token punctuation"},">")]),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    users"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou-1"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    users"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou-2"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    users"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou-3"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    users"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou-4"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    users"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou-5"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    users"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"User"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"liuyou-6"'),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"6"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 批量请求处理"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"int"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" users"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"size"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        bulkRequest"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token comment"},"// 这里是数据信息"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token keyword"},"new"),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"IndexRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"bulk"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                        "),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"id"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'""'),(0,t._)("span",{class:"token operator"},"+"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 没有设置id 会自定生成一个随机id"),(0,t.Uk)("\n                        "),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"source"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"toJSONString"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("users"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"get"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token class-name"},"XContentType"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("JSON"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"BulkResponse"),(0,t.Uk)(" bulk "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" restHighLevelClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"bulk"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("bulkRequest"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token class-name"},"RequestOptions"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DEFAULT"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token class-name"},"System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("bulk"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"status"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t._)("span",{class:"token comment"},"// ok"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"32"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"33"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"34"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"35"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"36"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"37"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"38"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"39"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"40"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"41"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"42"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"43"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"44"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"45"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"46"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"47"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"48"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"49"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"50"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"51"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"52"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"53"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"54"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"55"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"56"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"57"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"58"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"59"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"60"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"61"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"62"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"63"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"64"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"65"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"66"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"67"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"68"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"69"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"70"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"71"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"72"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"73"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"74"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"75"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"76"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"77"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"78"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"79"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"80"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"81"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"82"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"83"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"84"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"85"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"86"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"87"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"88"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"89"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"90"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"91"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"92"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"93"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"94"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"95"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"96"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"97"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"98"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"99"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"100"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"101"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"102"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"103"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"104"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"105"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"106"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"107"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"108"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"109"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"110"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"111"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"112"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"113"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"114"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"115"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"116"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"117"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"118"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"119"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"120"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"121"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"122"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"123"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"124"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"125"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"126"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"127"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"128"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"129"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"130"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"131"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"132"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"133"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"134"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"135"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"136"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"137"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"138"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"139"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"140"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"141"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"142"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"143"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"144"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"145"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"146"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"147"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"148"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"149"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"150"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"151"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"152"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"153"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"154"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"155"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"156"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"157"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"158"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"159"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"160"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"161"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"162"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"163"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"164"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"165"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"166"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"167"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"168"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"169"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"170"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"171"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"172"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"173"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"174"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"175"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"176"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"177"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"178"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"179"),(0,t._)("br")])],-1),I=(0,t._)("h2",{id:"_1-8-为什么要使用elasticsearch",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-8-为什么要使用elasticsearch","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.8. 为什么要使用Elasticsearch?")],-1),C=(0,t._)("p",null,"因为在我们商城中的数据,将来会非常多,所以采用以往的模糊查询,模糊查询前置配置,会放弃索引,导致商品查询是全表扫描,在百万级别的数据库中,效率非常低下,而我们使用ES做一个全文索引,我们将经常查询的商品的某些字段,比如说商品名,描述,价格还有id这些字段我们放入我们索引库里,可以提高查询速度.",-1),D=(0,t._)("h2",{id:"_1-9-es-的写入流程",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-9-es-的写入流程","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.9. ES 的写入流程")],-1),H=(0,t._)("p",null,[(0,t._)("img",{src:o,alt:"picture 2"})],-1),B=(0,t._)("ol",null,[(0,t._)("li",null,"客户端选择一个 node 发送请求过去,这个 node 就是 coordinating node (协调节点)"),(0,t._)("li",null,"coordinating node 对 document 进行路由,将请求转发给对应的 node(有 primary shard)"),(0,t._)("li",null,"实际的 node 上的 primary shard 处理请求,然后将数据同步到 replica node"),(0,t._)("li",null,"coordinating node 等到 primary node 和所有 replica node 都执行成功之后,就返回响应结果给客户端.")],-1),A=(0,t._)("h2",{id:"_1-10-es-的更新和删除流程",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-10-es-的更新和删除流程","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.10. ES 的更新和删除流程")],-1),N=(0,t._)("p",null,"删除和更新都是写操作,但是由于 Elasticsearch 中的文档是不可变的,因此不能被删除或者改动以展示其变更;所以 ES 利用 .del 文件 标记文档是否被删除,磁盘上的每个段都有一个相应的.del 文件",-1),F=(0,t._)("ol",null,[(0,t._)("li",null,"如果是删除操作,文档其实并没有真的被删除,而是在 .del 文件中被标记为 deleted 状态.该文档依然能匹配查询,但是会在结果中被过滤掉."),(0,t._)("li",null,"如果是更新操作,就是将旧的 doc 标识为 deleted 状态,然后创建一个新的 doc.")],-1),J=(0,t._)("h2",{id:"_1-11-es-的搜索流程",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-11-es-的搜索流程","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.11. ES 的搜索流程")],-1),Q=(0,t._)("p",null,"搜索被执行成一个两阶段过程,即 Query Then Fetch:",-1),K=(0,t._)("h3",{id:"_1-11-1-query-阶段",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-11-1-query-阶段","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.11.1. Query 阶段")],-1),G=(0,t._)("p",null,"客户端发送请求到 coordinate node,协调节点将搜索请求广播到所有的 primary shard 或 replica shard.每个分片在本地执行搜索并构建一个匹配文档的大小为 from + size 的优先队列. 每个分片返回各自优先队列中 所有文档的 ID 和排序值 给协调节点,由协调节点及逆行数据的合并,排序,分页等操作,产出最终结果.",-1),M=(0,t._)("h3",{id:"_1-11-2-fetch-阶段",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-11-2-fetch-阶段","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.11.2. Fetch 阶段")],-1),P=(0,t._)("p",null,"协调节点根据 doc id 去各个节点上查询实际的 document 数据,由协调节点返回结果给客户端.",-1),X=(0,t._)("h2",{id:"_1-12-在并发情况下-elasticsearch如果保证读写一致",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-12-在并发情况下-elasticsearch如果保证读写一致","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.12. 在并发情况下,Elasticsearch如果保证读写一致?")],-1),j=(0,t._)("h3",{id:"_1-12-1-对于更新操作",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-12-1-对于更新操作","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.12.1. 对于更新操作")],-1),z=(0,t._)("p",null,"可以通过版本号使用乐观并发控制,以确保新版本不会被旧版本覆盖",-1),V=(0,t._)("p",null,"每个文档都有一个_version 版本号,这个版本号在文档被改变时加一.Elasticsearch 使用这个_version 保证所有修改都被正确排序.当一个旧版本出现在新版本之后,它会被简单的忽略.",-1),Z=(0,t._)("p",null,"利用_version 的这一优点确保数据不会因为修改冲突而丢失.比如指定文档的 version 来做更改.如果那个版本号不是现在的,我们的请求就失败了.",-1),W=(0,t._)("h3",{id:"_1-12-2-对于写操作",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-12-2-对于写操作","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.12.2. 对于写操作")],-1),Y=(0,t._)("p",null,"一致性级别支持 quorum/one/all,默认为 quorum,即只有当大多数分片可用时才允许写操作.但即使大多数可用,也可能存在因为网络等原因导致写入副本失败,这样该副本被认为故障,分片将会在一个不同的节点上重建.",-1),$=(0,t._)("ol",null,[(0,t._)("li",null,"one:要求我们这个写操作,只要有一个 primary shard 是 active 活跃可用的,就可以执行"),(0,t._)("li",null,"all:要求我们这个写操作,必须所有的 primary shard 和 replica shard 都是活跃的,才可以执行这个写操作"),(0,t._)("li",null,"quorum:默认的值,要求所有的 shard 中,必须是大部分的 shard 都是活跃的,可用的,才可以执行这个写操作")],-1),nn=(0,t._)("h3",{id:"_1-12-3-对于读操作",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-12-3-对于读操作","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.12.3. 对于读操作")],-1),sn=(0,t._)("p",null,"可以设置 replication 为 sync (默认),这使得操作在主分片和副本分片都完成后才会返回;如果设置 replication 为 async 时,也可以通过设置搜索请求参数 _preference 为 primary 来查询主分片,确保文档是最新版本.",-1),an=(0,t._)("h2",{id:"_1-13-es-的性能优化-深度分页与滚动搜索-scroll",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-13-es-的性能优化-深度分页与滚动搜索-scroll","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.13. ES 的性能优化, 深度分页与滚动搜索 scroll")],-1),tn=(0,t._)("h3",{id:"_1-13-1-深度分页",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-13-1-深度分页","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.13.1. 深度分页")],-1),en=(0,t._)("p",null,"深度分页其实就是搜索的深浅度,比如第 1 页,第 2 页,第 10 页,第 20 页,是比较浅的;第 10000 页,第 20000 页就是很深了.搜索得太深,就会造成性能问题,会耗费内存和占用 cpu.而且 es 为了性能,他不支持超过一万条数据以上的分页查询.那么如何解决深度分页带来的问题,我们应该避免深度分页操作(限制分页页数),比如最多只能提供 100 页的展示,从第 101 页开始就没了,毕竟用户也不会搜的那么深.",-1),cn=(0,t._)("h3",{id:"_1-13-2-滚动搜索",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-13-2-滚动搜索","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.13.2. 滚动搜索")],-1),ln=(0,t._)("p",null,"一次性查询 1 万 + 数据,往往会造成性能影响,因为数据量太多了.这个时候可以使用滚动搜索,也就是 scroll. 滚动搜索可以先查询出一些数据,然后再紧接着依次往下查询.在第一次查询的时候会有一个滚动 id,相当于一个锚标记 ,随后再次滚动搜索会需要上一次搜索滚动 id,根据这个进行下一次的搜索请求.每次搜索都是基于一个历史的数据快照,查询数据的期间,如果有数据变更,那么和搜索是没有关系的.",-1),on=(0,t._)("h2",{id:"_1-14-es的数据类型",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-14-es的数据类型","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.14. es的数据类型")],-1),pn=(0,t._)("h3",{id:"_1-14-1-常用的数据类型",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-14-1-常用的数据类型","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.14.1. 常用的数据类型")],-1),un=(0,t._)("ol",null,[(0,t._)("li",null,"keyword 类型"),(0,t._)("li",null,"text 类型 (支持分词)"),(0,t._)("li",null,"数字类型"),(0,t._)("li",null,"时间类型")],-1),_n=(0,t._)("h3",{id:"_1-14-2-复杂的数据类型",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-14-2-复杂的数据类型","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.14.2. 复杂的数据类型")],-1),kn=(0,t._)("ol",null,[(0,t._)("li",null,"数组类型"),(0,t._)("li",null,"对象类型"),(0,t._)("li",null,"嵌套类型")],-1),rn=(0,t._)("h2",{id:"_1-15-搜索的整体技术架构",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-15-搜索的整体技术架构","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.15. 搜索的整体技术架构")],-1),mn=(0,t._)("p",null,[(0,t._)("img",{src:p,alt:"picture 3"})],-1),Un=(0,t._)("h2",{id:"_1-16-1设计阶段调优",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-16-1设计阶段调优","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.16. 1设计阶段调优")],-1),dn=(0,t._)("ol",null,[(0,t._)("li",null,"根据业务增量需求，采取基于日期模板创建索引，通过 roll over API 滚动索引；"),(0,t._)("li",null,"使用别名进行索引管理；"),(0,t._)("li",null,"每天凌晨定时对索引做 force_merge 操作，以释放空间；"),(0,t._)("li",null,"采取冷热分离机制，热数据存储到 SSD，提高检索效率；冷数据定期进行 shrink 操作，以缩减存储；"),(0,t._)("li",null,"采取 curator 进行索引的生命周期管理；"),(0,t._)("li",null,"仅针对需要分词的字段，合理的设置分词器；"),(0,t._)("li",null,"Mapping 阶段充分结合各个字段的属性，是否需要检索、是否需要存储等。")],-1),bn=(0,t._)("h2",{id:"_1-17-写入调优",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-17-写入调优","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.17. 写入调优")],-1),hn=(0,t._)("ol",null,[(0,t._)("li",null,"写入前副本数设置为 0;"),(0,t._)("li",null,"写入前关闭 refresh_interval 设置为 -1, 禁用刷新机制;"),(0,t._)("li",null,"写入过程中:采取 bulk 批量写入;"),(0,t._)("li",null,"写入后恢复副本数和刷新间隔;"),(0,t._)("li",null,"尽量使用自动生成的 id.")],-1),yn=(0,t._)("h2",{id:"_1-18-查询调优",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-18-查询调优","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.18. 查询调优")],-1),fn=(0,t._)("ol",null,[(0,t._)("li",null,"禁用 wildcard;"),(0,t._)("li",null,"禁用批量 terms(成百上千的场景);"),(0,t._)("li",null,"充分利用倒排索引机制,能 keyword 类型尽量 keyword;"),(0,t._)("li",null,"数据量大时候,可以先基于时间敲定索引再检索;"),(0,t._)("li",null,"设置合理的路由机制.")],-1),gn=(0,t._)("h2",{id:"_1-19-elasticsearch-对于大数据量-上亿量级-的聚合如何实现",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-19-elasticsearch-对于大数据量-上亿量级-的聚合如何实现","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.19. Elasticsearch 对于大数据量（上亿量级）的聚合如何实现？")],-1),wn=(0,t._)("p",null,"Elasticsearch 提供的首个近似聚合是 cardinality 度量。它提供一个字段的基数，即该字段的 distinct 或者 unique 值的数目。它是基于 HLL 算法的。HLL 会先对我们的输入作哈希运算，然后根据哈希运算 的结果中的 bits 做概率估算从而得到基数。其特点是：可配置的精度，用来控制内存的使用（更精确 ＝ 更多内存）；小的数据集精度是非常高的；我们可以通过配置参数，来设置去重需要的固定内存使用量。无论数千还是数十亿的唯一值，内存使用量只与你配置的精确度相关。",-1),xn=(0,t._)("h2",{id:"_1-20-es-在数据量很大的情况下-数十亿级别-如何提高查询效率",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-20-es-在数据量很大的情况下-数十亿级别-如何提高查询效率","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.20. ES 在数据量很大的情况下（数十亿级别）如何提高查询效率？")],-1),Sn=(0,t._)("p",null,[(0,t._)("img",{src:u,alt:"picture 4"})],-1),qn=(0,t._)("p",null,"es 的搜索引擎严重依赖于底层的 filesystem cache(文件系统缓存, 内存)，你如果给 filesystem cache 更多的内存，尽量让内存可以容纳所有的 idx segment file 索引数据文件，那么你搜索的时候就基本都是走内存的，性能会非常高。 你往 ES 里写的数据，实际上都写到磁盘文件里去了，查询的时候，操作系统会将磁盘文件里的数据自动缓存到 Filesystem Cache 里面去。你要让 es 性能要好，最佳的情况下，就是你的机器的内存，至少可以容纳你的总数据量的一半。 数据与热: 对于那些你觉得比较热的、经常会有人访问的数据，对热数据每隔一段时间，就提前访问一下，让数据进入 filesystem cache 里面去。",-1),vn={},En=(0,a(3744).Z)(vn,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[_,(0,t._)("p",null,[(0,t._)("a",k,[i,(0,t.Wm)(a)])]),r,m,U,d,b,h,y,f,g,w,x,S,q,v,E,R,O,L,T,I,C,D,H,B,A,N,F,J,Q,K,G,M,P,X,j,z,V,Z,W,Y,$,nn,sn,an,tn,en,cn,ln,on,pn,un,_n,kn,rn,mn,Un,dn,bn,hn,yn,fn,gn,wn,xn,Sn,qn],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}},9548:(n,s,a)=>{n.exports=a.p+"assets/img/1646090458425.5f2d6ad7.png"},9038:(n,s,a)=>{n.exports=a.p+"assets/img/1646090841265.c531a5bb.png"},8279:(n,s,a)=>{n.exports=a.p+"assets/img/1646448860495.27cdc9ea.png"},3761:(n,s,a)=>{n.exports=a.p+"assets/img/1646450239747.f34594c0.png"},1718:(n,s,a)=>{n.exports=a.p+"assets/img/1646451265736.35b40da6.png"},5365:(n,s,a)=>{n.exports=a.p+"assets/img/1646452279264.5a619c3c.png"}}]);