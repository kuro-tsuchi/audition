"use strict";(self.webpackChunkaudition=self.webpackChunkaudition||[]).push([[77],{1452:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-ffc94668",path:"/algorithm/summary.html",title:"1. algorithm",lang:"en-EN",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.1. 时间复杂度与空间复杂度",slug:"_1-1-时间复杂度与空间复杂度",children:[{level:3,title:"1.1.1. 常见的时间复杂度",slug:"_1-1-1-常见的时间复杂度",children:[]},{level:3,title:"1.1.2. 求解算法复杂度步骤",slug:"_1-1-2-求解算法复杂度步骤",children:[]},{level:3,title:"1.1.3. 大O表示法规则",slug:"_1-1-3-大o表示法规则",children:[]},{level:3,title:"1.1.4. 时间复杂度实例",slug:"_1-1-4-时间复杂度实例",children:[]}]},{level:2,title:"1.2. 冒泡排序",slug:"_1-2-冒泡排序",children:[]},{level:2,title:"1.3. 选择排序",slug:"_1-3-选择排序",children:[]},{level:2,title:"1.4. 归并排序",slug:"_1-4-归并排序",children:[]},{level:2,title:"1.5. 快速排序",slug:"_1-5-快速排序",children:[]}],filePathRelative:"algorithm/summary.md",git:{updatedTime:1654866381e3,contributors:[{name:"root",email:"root@DESKTOP-VKU4PE6.localdomain",commits:1},{name:"shorestraydog",email:"shorestraydog@protonmail.com",commits:1}]}}},3579:(n,s,a)=>{a.r(s),a.d(s,{default:()=>on});var t=a(6252),e=a(8538),o=a(7428),p=a(6585),c=a(834),l=a(4181);const k=(0,t._)("h1",{id:"_1-algorithm",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-algorithm","aria-hidden":"true"},"#"),(0,t.Uk)(" 1. algorithm")],-1),u=(0,t._)("h2",{id:"_1-1-时间复杂度与空间复杂度",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-时间复杂度与空间复杂度","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1. 时间复杂度与空间复杂度")],-1),_=(0,t._)("p",null,"时间复杂度要比空间复杂度更容易出问题,更多研究的是时间复杂度,如果没有特殊说明, 算法复杂度讲的是时间复杂度.",-1),i=(0,t._)("ol",null,[(0,t._)("li",null,"时间复杂度:用于评估执行程序所消耗的时间,可以估算出程序对处理器的使用程度."),(0,t._)("li",null,"空间复杂度:用于评估执行程序所占用的内存空间,可以估算出程序对计算机内存的使用程度.")],-1),r=(0,t._)("h3",{id:"_1-1-1-常见的时间复杂度",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-1-常见的时间复杂度","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.1. 常见的时间复杂度")],-1),U=(0,t._)("p",null,"O(1)常数型;O(log n)对数型,O(n)线性型,O(nlog n)线性对数型,O(n2)平方型,O(n3)立方型,O(nk)k次方型,O(2n)指数型",-1),b=(0,t._)("p",null,[(0,t.Uk)("不同类型的函数的增长趋势图,随着问题规模n的不断增大,上述时间复杂度不断增大,算法的执行效率越低 "),(0,t._)("img",{src:e,alt:"picture 7"})],-1),m=(0,t._)("h3",{id:"_1-1-2-求解算法复杂度步骤",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-2-求解算法复杂度步骤","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.2. 求解算法复杂度步骤")],-1),d=(0,t._)("ol",null,[(0,t._)("li",null,"找出算法中的基本语句:算法中执行次数最多的语句就是基本语句,通常是最内层循环的循环体."),(0,t._)("li",null,"计算基本语句的执行次数的数量级:只需计算基本语句执行次数的数量级,即只要保证函数中的最高次幂正确即可,可以忽略所有低次幂和最高次幂的系数"),(0,t._)("li",null,"用大Ο表示算法的时间性能:将基本语句执行次数的数量级放入大Ο记号中.")],-1),g=(0,t._)("h3",{id:"_1-1-3-大o表示法规则",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-3-大o表示法规则","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.3. 大O表示法规则")],-1),h=(0,t._)("ol",null,[(0,t._)("li",null,"用常数1取代运行时间中的所有加法常数;"),(0,t._)("li",null,"只保留时间函数中的最高阶项;"),(0,t._)("li",null,"如果最高阶项存在,则省去最高阶项前面的系数;")],-1),f=(0,t._)("h3",{id:"_1-1-4-时间复杂度实例",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-时间复杂度实例","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4. 时间复杂度实例")],-1),y=(0,t._)("h4",{id:"_1-1-4-1-常数阶o-1",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-1-常数阶o-1","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4.1. 常数阶O(1)")],-1),w=(0,t._)("p",null,"无论代码执行了多少行,只要是没有循环等复杂结构,那这个代码的时间复杂度就都是O(1),如:",-1),x=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" k "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br")])],-1),v=(0,t._)("h4",{id:"_1-1-4-2-对数阶o-log-n",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-2-对数阶o-log-n","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4.2. 对数阶O(log n)")],-1),O=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// ①"),(0,t.Uk)("\nwhile "),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i "),(0,t._)("span",{class:"token operator"},"<="),(0,t.Uk)(" n"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// ②"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br")])],-1),j=(0,t._)("p",null,"在上述代码中,语句①的频度为1,可以忽略不计.",-1),S=(0,t._)("p",null,"语句②我们可以看到它是以2的倍数来逼近n,每次都乘以2.也就是说2的x次方小于等于n时会执行循环体,记作2^x^ <= n,于是得出x <= $log{n}$.时间复杂度为O($log{n}$).",-1),q=(0,t._)("h4",{id:"_1-1-4-3-线性阶o-n",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-3-线性阶o-n","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4.3. 线性阶O(n)")],-1),T=(0,t._)("p",null,"for循环中的代码会执行n遍,因此它消耗的时间是随着n的变化而成线性变化的,因此这类算法都可以用O(n)来表示时间复杂度.",-1),$=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// ①"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" n"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// ②"),(0,t.Uk)("\n   j "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" i"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// ③"),(0,t.Uk)("\n   j"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// ④"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br")])],-1),E=(0,t._)("p",null,"上述代码中,语句①的频度为1,②的频度为n,③的频度为n-1,④的频度为n-1,因此整个算法可以用公式T(n)=1+n+(n-1)+(n-1)来表示.进而可以推到T(n)=1+n+(n-1)+(n-1)=3n-1,即O(n)=3n-1,去掉低次幂和系数即O(n)=n,因此T(n)=O(n)",-1),I=(0,t._)("h4",{id:"_1-1-4-4-线性对数阶o-nlogn",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-4-线性对数阶o-nlogn","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4.4. 线性对数阶O(nlogN)")],-1),P=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" m "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" m "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" n"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" m"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// ①"),(0,t.Uk)("\n   while "),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i "),(0,t._)("span",{class:"token operator"},"<="),(0,t.Uk)(" n"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"*"),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// ②"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br")])],-1),Z=(0,t._)("p",null,"时间复杂度n*O(log n)了,记作O(nlog n).",-1),C=(0,t._)("h4",{id:"_1-1-4-5-平方阶o-n2",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-5-平方阶o-n2","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4.5. 平方阶O(n²)")],-1),D=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" k "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" n"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" n"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n      k"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br")])],-1),K=(0,t._)("h4",{id:"_1-1-4-6-组合式复杂度分析",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-6-组合式复杂度分析","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4.6. 组合式复杂度分析")],-1),N=(0,t._)("h5",{id:"_1-1-4-6-1-取最大复杂度作为整个算法复杂度",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-6-1-取最大复杂度作为整个算法复杂度","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4.6.1. 取最大复杂度作为整个算法复杂度")],-1),A=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t.Uk)("public static void "),(0,t._)("span",{class:"token function"},"print1"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" n"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"="),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("i"),(0,t._)("span",{class:"token operator"},"<"),(0,t._)("span",{class:"token number"},"1000"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("i"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" j"),(0,t._)("span",{class:"token operator"},"="),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("j"),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)("n"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("j"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" p"),(0,t._)("span",{class:"token operator"},"="),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("p"),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)("n"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("p"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" q"),(0,t._)("span",{class:"token operator"},"="),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("q"),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)("n"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("q"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("p"),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)("q"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 三个复杂度可以很明显得到的大小关系为：O(1)<O(n)<O(n²)，在同一个算法中有明确大小关系的，就可以直接取最大值作为这个算法的复杂度，所以算法的复杂度就是 O(n²)。"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br")])],-1),H=(0,t._)("h5",{id:"_1-1-4-6-2-取多个复杂度之和作为整个算法复杂度",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-4-6-2-取多个复杂度之和作为整个算法复杂度","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1.4.6.2. 取多个复杂度之和作为整个算法复杂度")],-1),R=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t.Uk)("public static void "),(0,t._)("span",{class:"token function"},"print2"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" m"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" n"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"="),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("i"),(0,t._)("span",{class:"token operator"},"<"),(0,t._)("span",{class:"token number"},"1000"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("i"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" j"),(0,t._)("span",{class:"token operator"},"="),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("j"),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)("m"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("j"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(" k"),(0,t._)("span",{class:"token operator"},"="),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("k"),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)("n"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("k"),(0,t._)("span",{class:"token operator"},"++"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        System"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("k"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 三段循环分别复杂度：O(1)，O(m)，O(n)。这时候我们只能知道 O(1) 最小可以忽略，但是后面两个无法却无法确定大小，所以这时候我们需要取两段循环复杂度之和来作为算法的复杂度，所以可以得到这个例子的算法复杂度为：O(m+n)。"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br")])],-1),V=(0,t._)("h2",{id:"_1-2-冒泡排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-2-冒泡排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.2. 冒泡排序")],-1),Y=(0,t._)("p",null,"冒泡排序重复地走访过要排序的元素列,依次比较两个相邻的元素,如果顺序(如从大到小,首字母从Z到A)错误就把他们交换过来.走访元素的工作是重复地进行直到没有相邻元素需要交换,也就是说该元素列已经排序完成.",-1),z=(0,t._)("p",null,[(0,t._)("img",{src:o,alt:"picture 2"})],-1),B=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"bubbleSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"=="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},">"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br")])],-1),F=(0,t._)("h2",{id:"_1-3-选择排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-3-选择排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.3. 选择排序")],-1),G=(0,t._)("p",null,"选择排序法是每一次从待排序的数据元素中选出最小(或最大)的一个元素,存放在序列的起始位置,然后,再从剩余未排序元素中继续寻找最小(大)元素,然后放到已排序序列的末尾.以此类推,直到全部待排序的数据元素排完",-1),J=(0,t._)("p",null,[(0,t._)("img",{src:p,alt:"picture 4"})],-1),L=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"selectionSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n l "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" l "),(0,t._)("span",{class:"token operator"},"=="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" l"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  min "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" i\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" l"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" j"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("min"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    min "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" j\n   "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("min"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)("  arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("min"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br")])],-1),M=(0,t._)("h2",{id:"_1-4-归并排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-4-归并排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.4. 归并排序")],-1),Q=(0,t._)("p",null,"归并排序将已有序的子序列合并,得到完全有序的序列;即先使每个子序列有序,再使子序列段间有序.若将两个有序表合并成一个有序表,称为二路归并.",-1),W=(0,t._)("p",null,[(0,t._)("img",{src:c,alt:"picture 5"})],-1),X=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"mergeSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        length "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" length "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n        middle "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" length "),(0,t._)("span",{class:"token operator"},"/"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t.Uk)("\n        left "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("middle"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n        right "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("middle"),(0,t._)("span",{class:"token punctuation"},":"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"merge"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token function"},"mergeSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("left"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"mergeSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("right"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"merge"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("left "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" right "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" result "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("left"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"&&"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("right"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<="),(0,t.Uk)(" right"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                        result "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"append"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("result"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                        left "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},":"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                        result "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"append"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("result"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" right"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                        right "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" right"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},":"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n        "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("left"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                result "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"append"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("result"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                left "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},":"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n        "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("right"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                result "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"append"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("result"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" right"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                right "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" right"),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},":"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n        "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" result\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"32"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"33"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"34"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"35"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"36"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"37"),(0,t._)("br")])],-1),nn=(0,t._)("h2",{id:"_1-5-快速排序",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-5-快速排序","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.5. 快速排序")],-1),sn=(0,t._)("p",null,"通过一趟排序将要排序的数据分割成独立的两部分,其中一部分的所有数据比另一部分的所有数据要小,再按这种方法对这两部分数据分别进行快速排序,整个排序过程可以递归进行,使整个数据变成有序序列.",-1),an=(0,t._)("p",null,[(0,t._)("img",{src:l,alt:"picture 6"})],-1),tn=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"_quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"len"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token operator"},"-"),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"_quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" right "),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" left "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" right "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                partitionIndex "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"partition"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" right"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token function"},"_quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" partitionIndex"),(0,t._)("span",{class:"token operator"},"-"),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token function"},"_quickSort"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" partitionIndex"),(0,t._)("span",{class:"token operator"},"+"),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" right"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" arr\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"partition"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" left"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" right "),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        pivot "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" left\n        index "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" pivot "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n\n        "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" index"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<="),(0,t.Uk)(" right"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("pivot"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n                        "),(0,t._)("span",{class:"token function"},"swap"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" i"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" index"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n                        index "),(0,t._)("span",{class:"token operator"},"+="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token function"},"swap"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" pivot"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" index"),(0,t._)("span",{class:"token operator"},"-"),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" index "),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"swap"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("arr "),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" i"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" j "),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("j"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" arr"),(0,t._)("span",{class:"token punctuation"},"["),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},"]"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"32"),(0,t._)("br")])],-1),en={},on=(0,a(3744).Z)(en,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)(t.HY,null,[k,u,_,i,r,U,b,m,d,g,h,f,y,w,x,v,O,j,S,q,T,$,E,I,P,Z,C,D,K,N,A,H,R,V,Y,z,B,F,G,J,L,M,Q,W,X,nn,sn,an,tn],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}},7428:(n,s,a)=>{n.exports=a.p+"assets/img/1647660345036.cc3763ad.png"},6585:(n,s,a)=>{n.exports=a.p+"assets/img/1647660993096.d5304c4f.png"},834:(n,s,a)=>{n.exports=a.p+"assets/img/1647661408881.58ee96c7.png"},4181:(n,s,a)=>{n.exports=a.p+"assets/img/1647661842556.8e569240.png"},8538:(n,s,a)=>{n.exports=a.p+"assets/img/1647662181772.ea21c92e.png"}}]);