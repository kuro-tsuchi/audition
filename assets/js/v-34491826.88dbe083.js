"use strict";(self.webpackChunkaudition=self.webpackChunkaudition||[]).push([[1],{211:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-34491826",path:"/golang/concurrency.html",title:"1. concurrency",lang:"en-EN",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.1. 并发和并行的区别是什么",slug:"_1-1-并发和并行的区别是什么",children:[]},{level:2,title:"1.2. golang 如何安全读写共享变量",slug:"_1-2-golang-如何安全读写共享变量",children:[{level:3,title:"1.2.1. mutext加锁安全读写共享变量",slug:"_1-2-1-mutext加锁安全读写共享变量",children:[]},{level:3,title:"1.2.2. goroutine 安全读写共享变量",slug:"_1-2-2-goroutine-安全读写共享变量",children:[]}]},{level:2,title:"1.3. golang中常用的并发模型",slug:"_1-3-golang中常用的并发模型",children:[{level:3,title:"1.3.1. 通过channel 同步通道实现并发控制",slug:"_1-3-1-通过channel-同步通道实现并发控制",children:[]},{level:3,title:"1.3.2. 通过sync包中的WaitGroup实现并发控制",slug:"_1-3-2-通过sync包中的waitgroup实现并发控制",children:[]},{level:3,title:"1.3.3. 上下文Context实现并发控制",slug:"_1-3-3-上下文context实现并发控制",children:[]}]},{level:2,title:"1.4. context 是什么",slug:"_1-4-context-是什么",children:[]},{level:2,title:"1.5. context 使用场景及注意事项",slug:"_1-5-context-使用场景及注意事项",children:[{level:3,title:"1.5.1. context 的 注意事项如下",slug:"_1-5-1-context-的-注意事项如下",children:[]}]},{level:2,title:"1.6. context 使用场景",slug:"_1-6-context-使用场景",children:[{level:3,title:"1.6.1. RPC调用",slug:"_1-6-1-rpc调用",children:[]},{level:3,title:"1.6.2. 超时请求 (context.WithTimeout)",slug:"_1-6-2-超时请求-context-withtimeout",children:[]},{level:3,title:"1.6.3. HTTP服务器的request互相传递数据",slug:"_1-6-3-http服务器的request互相传递数据",children:[]}]},{level:2,title:"1.7. 协程和线程和进程的区别",slug:"_1-7-协程和线程和进程的区别",children:[]},{level:2,title:"1.8. 什么是 GMP? 调度过程是什么样的?",slug:"_1-8-什么是-gmp-调度过程是什么样的",children:[{level:3,title:"1.8.1. go 语言的并发模型 CSP",slug:"_1-8-1-go-语言的并发模型-csp",children:[]},{level:3,title:"1.8.2. go 语言对 CSP 并发模型的实现: GPM 调度模型",slug:"_1-8-2-go-语言对-csp-并发模型的实现-gpm-调度模型",children:[]},{level:3,title:"1.8.3. go 调度器调度过程",slug:"_1-8-3-go-调度器调度过程",children:[]}]},{level:2,title:"1.9. GMP 的数量问题?",slug:"_1-9-gmp-的数量问题",children:[{level:3,title:"1.9.1. P 的数量问题",slug:"_1-9-1-p-的数量问题",children:[]},{level:3,title:"1.9.2. M 的数量问题",slug:"_1-9-2-m-的数量问题",children:[]},{level:3,title:"1.9.3. G 的数量问题",slug:"_1-9-3-g-的数量问题",children:[]}]},{level:2,title:"1.10. 通道(channel)",slug:"_1-10-通道-channel",children:[{level:3,title:"1.10.1. 通道分为无缓存通道和有缓存通道",slug:"_1-10-1-通道分为无缓存通道和有缓存通道",children:[]},{level:3,title:"1.10.2. 通道的关闭, close()",slug:"_1-10-2-通道的关闭-close",children:[]},{level:3,title:"1.10.3. 超时处理",slug:"_1-10-3-超时处理",children:[]}]},{level:2,title:"1.11. go channel为什么是安全的?",slug:"_1-11-go-channel为什么是安全的",children:[]},{level:2,title:"1.12. 对已经关闭的的 chan 进行读写,会怎么样?为什么?",slug:"_1-12-对已经关闭的的-chan-进行读写-会怎么样-为什么",children:[]},{level:2,title:"1.13. 等待组 WaitGroup",slug:"_1-13-等待组-waitgroup",children:[]},{level:2,title:"1.14. sync.Once 与 init() 区别",slug:"_1-14-sync-once-与-init-区别",children:[]},{level:2,title:"1.15. golang并发,选channel还是选锁",slug:"_1-15-golang并发-选channel还是选锁",children:[]},{level:2,title:"1.16. golang 的锁机制",slug:"_1-16-golang-的锁机制",children:[{level:3,title:"1.16.1. 互斥锁和读写锁区别",slug:"_1-16-1-互斥锁和读写锁区别",children:[]},{level:3,title:"1.16.2. 互斥锁",slug:"_1-16-2-互斥锁",children:[]},{level:3,title:"1.16.3. 读写锁",slug:"_1-16-3-读写锁",children:[]}]},{level:2,title:"1.17. 乐观锁和悲观锁",slug:"_1-17-乐观锁和悲观锁",children:[{level:3,title:"1.17.1. 乐观锁",slug:"_1-17-1-乐观锁",children:[]},{level:3,title:"1.17.2. 悲观锁",slug:"_1-17-2-悲观锁",children:[]}]},{level:2,title:"1.18. 在go函数中为什么会发生内存泄露(goroutine泄露)",slug:"_1-18-在go函数中为什么会发生内存泄露-goroutine泄露",children:[]},{level:2,title:"1.19. select 可以用于什么?",slug:"_1-19-select-可以用于什么",children:[]},{level:2,title:"1.20. goroutine的优雅退出",slug:"_1-20-goroutine的优雅退出",children:[{level:3,title:"1.20.1. 使用 for-range 退出",slug:"_1-20-1-使用-for-range-退出",children:[]},{level:3,title:"1.20.2. 使用select case ,ok退出",slug:"_1-20-2-使用select-case-ok退出",children:[]},{level:3,title:"1.20.3. 使用退出通道退出",slug:"_1-20-3-使用退出通道退出",children:[]},{level:3,title:"1.20.4. 总结",slug:"_1-20-4-总结",children:[]}]},{level:2,title:"1.21. 如何让所有子协程执行完后再执行主协程",slug:"_1-21-如何让所有子协程执行完后再执行主协程",children:[{level:3,title:"1.21.1. channel 实现同步",slug:"_1-21-1-channel-实现同步",children:[]},{level:3,title:"1.21.2. sync.WaitGroup 实现等待",slug:"_1-21-2-sync-waitgroup-实现等待",children:[]}]},{level:2,title:"1.22. 知道哪些 sync 同步原语?各有什么作用?",slug:"_1-22-知道哪些-sync-同步原语-各有什么作用",children:[]}],filePathRelative:"golang/concurrency.md",git:{updatedTime:1655120116e3,contributors:[{name:"shorestraydog",email:"shorestraydog@protonmail.com",commits:10},{name:"root",email:"root@DESKTOP-VKU4PE6.localdomain",commits:1}]}}},3903:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Fs});var t=a(6252),e=a(5882),c=a(2377);const o=(0,t._)("h1",{id:"_1-concurrency",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-concurrency","aria-hidden":"true"},"#"),(0,t.Uk)(" 1. concurrency")],-1),l=(0,t._)("p",null,"Do not communicate by sharing memory. Instead, share memory by communicating.",-1),p=(0,t._)("h2",{id:"_1-1-并发和并行的区别是什么",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-1-并发和并行的区别是什么","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.1. 并发和并行的区别是什么")],-1),u=(0,t._)("ol",null,[(0,t._)("li",null,"并发: 同一时间段, 多个任务都在执行"),(0,t._)("li",null,"并行: 单位时间内, 多个任务同时执行.")],-1),_=(0,t._)("h2",{id:"_1-2-golang-如何安全读写共享变量",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-2-golang-如何安全读写共享变量","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.2. golang 如何安全读写共享变量")],-1),k=(0,t._)("h3",{id:"_1-2-1-mutext加锁安全读写共享变量",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-2-1-mutext加锁安全读写共享变量","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.2.1. mutext加锁安全读写共享变量")],-1),i=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"//  var mutex sync.Mutex"),(0,t.Uk)("\n count "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)("\n\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" r "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" r "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" r"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"//    mutex.Lock()"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"//    defer mutex.Unlock()"),(0,t.Uk)("\n   count "),(0,t._)("span",{class:"token operator"},"+="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n   fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("count"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 8"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 7"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 9"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 1"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 3"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 4"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 5"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 6"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 10"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 2"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 加锁后值依次递增输出"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br")])],-1),r=(0,t._)("h3",{id:"_1-2-2-goroutine-安全读写共享变量",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-2-2-goroutine-安全读写共享变量","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.2.2. goroutine 安全读写共享变量")],-1),b=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" deposits "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// send amout to deposit"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" balances "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// receive balance"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// Deposit 存款"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"Deposit"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("amount "),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(" deposits "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(" amount "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// Balance 余额"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"Balance"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("balances "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 出纳员"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"teller"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" balance "),(0,t._)("span",{class:"token builtin"},"int"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// balance is confined to teller goroutine"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(" amount "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("deposits"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n   balance "),(0,t._)("span",{class:"token operator"},"+="),(0,t.Uk)(" amount\n  "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(" balances "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(" balance"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"init"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"teller"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// start the monitor goroutine"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token function"},"Deposit"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token function"},"Balance"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// prints 10"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token function"},"Deposit"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"20"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token function"},"Balance"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// prints 30"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 通过 select 语句来实现的避免多个 goroutine 同时访问共享变量 balance"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br")])],-1),U=(0,t._)("h2",{id:"_1-3-golang中常用的并发模型",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-3-golang中常用的并发模型","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.3. golang中常用的并发模型")],-1),m=(0,t._)("h3",{id:"_1-3-1-通过channel-同步通道实现并发控制",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-3-1-通过channel-同步通道实现并发控制","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.3.1. 通过channel 同步通道实现并发控制")],-1),d=(0,t._)("p",null,"无缓冲通道(同步通道)指的是通道的大小为0,它要求发送 goroutine 和接收 goroutine 同时准备好,才可以完成发送和接收操作.如果没有同时准备好的话,先执行的操作就会阻塞等待,直到另一个相对应的操作准备好为止.",-1),g=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    ch "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"struct"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"start working"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        ch "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"struct"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("ch\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"finished"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// start working"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// finished"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 当主 goroutine 运行到 <-ch 接受 channel 的值的时候,如果该 channel 中没有数据,就会一直阻塞等待,直到有值. 这样就可以简单实现并发控制"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br")])],-1),h=(0,t._)("h3",{id:"_1-3-2-通过sync包中的waitgroup实现并发控制",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-3-2-通过sync包中的waitgroup实现并发控制","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.3.2. 通过sync包中的WaitGroup实现并发控制")],-1),f=(0,t._)("p",null,"goroutine是异步执行的,为了防止在结束main函数的时候结束掉goroutine,所以需要同步等待,WaitGroup 主要用于同步多个协程间的状态，例如等待所有协程都执行完",-1),w=(0,t._)("h4",{id:"_1-3-2-1-在waitgroup里主要有三个方法",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-3-2-1-在waitgroup里主要有三个方法","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.3.2.1. 在WaitGroup里主要有三个方法")],-1),y=(0,t._)("p",null,"Add, 可以添加goroutine的数量. Done, 相当于Add(-1). Wait, 执行后会堵塞主线程,直到WaitGroup 里的值减至0.",-1),x=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n wg "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("WaitGroup"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i "),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n   wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Wait"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br")])],-1),v=(0,t._)("h3",{id:"_1-3-3-上下文context实现并发控制",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-3-3-上下文context实现并发控制","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.3.3. 上下文Context实现并发控制")],-1),P=(0,t._)("p",null,"context 包主要是用来处理多个 goroutine 之间共享数据,及多个 goroutine 的管理.",-1),C=(0,t._)("h2",{id:"_1-4-context-是什么",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-4-context-是什么","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.4. context 是什么")],-1),G=(0,t._)("p",null,"context 主要用来在 goroutine 之间传递上下文信息, 用于控制goroutine的生命周期, 也常用于并发控制和超时控制",-1),W=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"type"),(0,t.Uk)(" Context "),(0,t._)("span",{class:"token keyword"},"interface"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("  \n    "),(0,t._)("span",{class:"token function"},"Deadline"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("deadline time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Time"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token builtin"},"bool"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"struct"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("        \n    "),(0,t._)("span",{class:"token function"},"Err"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"error"),(0,t.Uk)(" \n    "),(0,t._)("span",{class:"token function"},"Value"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("key "),(0,t._)("span",{class:"token keyword"},"interface"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"interface"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// Deadline会返回一个超时时间,routine获得了超时时间后,可以对某些io操作设定超时时间."),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// Done会返回一个channel,当该context被取消的时候,该channel会被关闭,同时对应的使用该context的routine也应该结束并返回."),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// Value可以让routine共享一些数据,当然获得数据是协程安全的."),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// Context中的方法是协程安全的,这也就代表了在父routine中创建的context,可以传递给任意数量的routine并让他们同时访问."),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br")])],-1),M=(0,t._)("h2",{id:"_1-5-context-使用场景及注意事项",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-5-context-使用场景及注意事项","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.5. context 使用场景及注意事项")],-1),R=(0,t._)("p",null,"context 用于控制 goroutine 的生命周期.当一个计算任务被 goroutine 承接了之后,由于某种原因(超时,或者强制退出)我们希望中止这个 goroutine 的计算任务,那么就用得到这个 Context 了.",-1),S=(0,t._)("p",null,"context 有 cancelCtx, timerCtx, valueCtx. 它们分别是用来通知取消, 通知超时, 存储 key-value 值.",-1),D=(0,t._)("p",null,[(0,t._)("img",{src:e,alt:"picture 1"})],-1),A=(0,t._)("h3",{id:"_1-5-1-context-的-注意事项如下",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-5-1-context-的-注意事项如下","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.5.1. context 的 注意事项如下")],-1),O=(0,t._)("p",null,"context 的 Done() 方法往往需要配合 select {} 使用,以监听退出.尽量通过函数参数来暴露 context,不要在自定义结构体里包含它. WithValue 类型的 context 应该尽量存储一些全局的 data,而不要存储一些可有可无的局部 data. context 是并发安全的.一旦context 执行取消动作,所有派生的 context 都会触发取消.",-1),T=(0,t._)("h2",{id:"_1-6-context-使用场景",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-6-context-使用场景","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.6. context 使用场景")],-1),q=(0,t._)("h3",{id:"_1-6-1-rpc调用",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-6-1-rpc调用","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.6.1. RPC调用")],-1),N=(0,t._)("p",null,"在主goroutine上有4个RPC,RPC2/3/4是并行请求的,我们这里希望在RPC2请求失败之后,直接返回错误,并且让RPC3/4停止继续计算.这个时候,就使用的到Context.使用了waitGroup来保证main函数在所有RPC调用完成之后才退出.当主goroutine想要告诉所有goroutine要结束的时候,通过cancel函数把结束的信息告诉给所有的goroutine.所有的goroutine都需要内置处理这个听声器结束信号的逻辑(ctx->Done())",-1),L=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"package"),(0,t.Uk)(" main\n"),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token string"},'"context"'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token string"},'"sync"'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token string"},'"github.com/pkg/errors"'),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"Rpc"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Context"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" url "),(0,t._)("span",{class:"token builtin"},"string"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"error"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    result"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    err"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"error"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n        "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token comment"},"// 进行RPC调用,并且返回是否成功,成功通过result传递成功信息,错误通过error传递错误信息"),(0,t.Uk)("\n        isSuccess"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" isSuccess "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            result "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"-"),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            err "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)("errors"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"New"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"some error happen"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n        "),(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token comment"},"// 其他RPC调用调用失败"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" ctx"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Err"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(" e"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"-"),(0,t.Uk)("err"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token comment"},"// 本RPC调用失败,返回错误信息"),(0,t.Uk)("\n                "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" e\n        "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("result"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token comment"},"// 本RPC调用成功,不返回错误信息"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    ctx"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" cancel"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"WithCancel"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Background"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    "),(0,t._)("span",{class:"token comment"},"// RPC1调用"),(0,t.Uk)("\n    err"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"Rpc"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"http://rpc_1_url"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" err "),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n    wg"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("WaitGroup "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n    "),(0,t._)("span",{class:"token comment"},"// RPC2调用"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"defer"),(0,t.Uk)(" wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        err"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"Rpc"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"http://rpc_2_url"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" err "),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token function"},"cancel"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    "),(0,t._)("span",{class:"token comment"},"// RPC3调用"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"defer"),(0,t.Uk)(" wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        err"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"Rpc"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"http://rpc_3_url"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" err "),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token function"},"cancel"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    "),(0,t._)("span",{class:"token comment"},"// RPC4调用"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"defer"),(0,t.Uk)(" wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        err"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"Rpc"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"http://rpc_4_url"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" err "),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            "),(0,t._)("span",{class:"token function"},"cancel"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Wait"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"32"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"33"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"34"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"35"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"36"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"37"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"38"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"39"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"40"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"41"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"42"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"43"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"44"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"45"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"46"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"47"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"48"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"49"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"50"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"51"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"52"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"53"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"54"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"55"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"56"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"57"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"58"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"59"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"60"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"61"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"62"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"63"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"64"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"65"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"66"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"67"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"68"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"69"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"70"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"71"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"72"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"73"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"74"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"75"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"76"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"77"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"78"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"79"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"80"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"81"),(0,t._)("br")])],-1),I=(0,t._)("h3",{id:"_1-6-2-超时请求-context-withtimeout",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-6-2-超时请求-context-withtimeout","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.6.2. 超时请求 (context.WithTimeout)")],-1),B=(0,t._)("p",null,"发送RPC请求的时候,都会对这个请求进行一个超时的限制, 超时会自动断开.",-1),V=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    ctx"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" cancel "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"WithTimeout"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Background"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"50"),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Millisecond"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"defer"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"cancel"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    "),(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"After"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)(" time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n        fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"overslept"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n        fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Err"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},'// prints "context deadline exceeded"'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 客户端 http 请求"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n uri "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"https://httpbin.org/delay/3"'),(0,t.Uk)("\n req"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" err "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"NewRequest"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"GET"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" uri"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" err "),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  log"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Fatalf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"\"http.NewRequest() failed with '%s'\\n\""),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" err"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n ctx"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"_"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"WithTimeout"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Background"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Millisecond"),(0,t._)("span",{class:"token operator"},"*"),(0,t._)("span",{class:"token number"},"100"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n req "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" req"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"WithContext"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n resp"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" err "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("DefaultClient"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Do"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("req"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" err "),(0,t._)("span",{class:"token operator"},"!="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  log"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Fatalf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},"\"http.DefaultClient.Do() failed with:\\n'%s'\\n\""),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" err"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"defer"),(0,t.Uk)(" resp"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Body"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br")])],-1),E=(0,t._)("h3",{id:"_1-6-3-http服务器的request互相传递数据",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-6-3-http服务器的request互相传递数据","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.6.3. HTTP服务器的request互相传递数据")],-1),F=(0,t._)("p",null,"valueCtx最经常使用的场景就是在一个http服务器中,在request中传递一个特定值,比如有一个中间件,做权限验证,然后把验证后的用户名存放在request中.",-1),H=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"type"),(0,t.Uk)(" FooKey "),(0,t._)("span",{class:"token builtin"},"string"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" UserName "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"FooKey"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"user-name"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" UserId "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"FooKey"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"user-id"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"foo"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("next http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("HandlerFunc"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(" http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("HandlerFunc "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("w http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("ResponseWriter"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" r "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)("http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Request"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  ctx "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"WithValue"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("r"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Context"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" UserId"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"1"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  ctx2 "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"WithValue"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" UserName"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'"yejianfeng"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token function"},"next"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("w"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" r"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"WithContext"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ctx2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"GetUserName"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("context context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Context"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" ret"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Value"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("UserName"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"string"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" ret\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'""'),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"GetUserId"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("context context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Context"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"string"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" ret"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" context"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Value"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("UserId"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token builtin"},"string"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(" ret\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)(),(0,t._)("span",{class:"token string"},'""'),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"test"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("w http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("ResponseWriter"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" r "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)("http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Request"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n w"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Write"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token function"},"byte"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"welcome: "'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n w"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Write"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token function"},"byte"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token function"},"GetUserId"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("r"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Context"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n w"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Write"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token function"},"byte"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'" "'),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n w"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Write"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},"["),(0,t._)("span",{class:"token punctuation"},"]"),(0,t._)("span",{class:"token function"},"byte"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token function"},"GetUserName"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("r"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Context"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Handle"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"/"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"foo"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("test"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n http"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"ListenAndServe"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'":8080"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"32"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"33"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"34"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"35"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"36"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"37"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"38"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"39"),(0,t._)("br")])],-1),K=(0,t._)("h2",{id:"_1-7-协程和线程和进程的区别",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-7-协程和线程和进程的区别","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.7. 协程和线程和进程的区别")],-1),j=(0,t._)("ol",null,[(0,t._)("li",null,"进程是CPU资源分配的基本单位,进程拥有自己的资源空间,一个进程包含若干个线程"),(0,t._)("li",null,"线程是独立运行和独立调度的基本单位, 线程与CPU资源分配无关,多个线程共享同一进程内的资源.线程的调度与切换比进程快很多."),(0,t._)("li",null,"协程是一种用户态的轻量级线程,协程拥有自己的寄存器上下文和栈.")],-1),X=(0,t._)("h2",{id:"_1-8-什么是-gmp-调度过程是什么样的",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-8-什么是-gmp-调度过程是什么样的","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.8. 什么是 GMP? 调度过程是什么样的?")],-1),Z=(0,t._)("p",null,"go 语言天然支持高并发,可以在一个进程中启动成千上万个协程.",-1),Y=(0,t._)("h3",{id:"_1-8-1-go-语言的并发模型-csp",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-8-1-go-语言的并发模型-csp","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.8.1. go 语言的并发模型 CSP")],-1),z=(0,t._)("p",null,"CSP(通信顺序过程 Communicating Sequential Processes),是基于通道传递消息的理论,以通信的方式来共享内存, 它的核心观念是将两个并发执行的实体通过通道 channel 连接起来,所有的消息都通过 channel 传输.",-1),J=(0,t._)("h3",{id:"_1-8-2-go-语言对-csp-并发模型的实现-gpm-调度模型",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-8-2-go-语言对-csp-并发模型的实现-gpm-调度模型","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.8.2. go 语言对 CSP 并发模型的实现: GPM 调度模型")],-1),Q=(0,t._)("p",null,[(0,t.Uk)("GPM 代表了三个角色,分别是 goroutine,Processor,Machine(在golang 中等同于系统线程.). "),(0,t._)("img",{src:c,alt:"picture 1"})],-1),$=(0,t._)("ol",null,[(0,t._)("li",null,[(0,t.Uk)("G (协程:goroutine): go 协程,每个 go 关键字都会创建一个协程. "),(0,t._)("code",null,"go func() {}()")]),(0,t._)("li",null,"M(thread):内核级线程,所有的 G 都要放在 M 上才能运行."),(0,t._)("li",null,"P (processor): 逻辑处理器,它的主要用途就是用来执行goroutine的,所以它也维护了一个goroutine队列,里面存储了所有需要它来执行的goroutine.")],-1),nn=(0,t._)("h3",{id:"_1-8-3-go-调度器调度过程",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-8-3-go-调度器调度过程","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.8.3. go 调度器调度过程")],-1),sn=(0,t._)("p",null,"线程是运行 Goroutine 的实体，调度器的功能是把可运行的 Goroutine 分配到工作线程上。Goroutine 调度器和 OS 调度器是通过 M 结合起来的，每个 M 都代表了 1 个内核线程，OS 调度器负责把内核线程分配到 CPU 的核上执行。",-1),an=(0,t._)("p",null,"新创建的goroutine会先存放在Global全局队列中,等待go调度器进行调度,随后goroutine被分配给其中的一个逻辑处理器P,并放到这个逻辑处理器对应的Local本地运行队列中,最终等待被逻辑处理器P执行即可.",-1),tn=(0,t._)("p",null,"在M与P绑定后,M会不断从P的Local队列中无锁地取出G,并切换到G的堆栈执行,当P的Local队列中没有G时,再从Global队列中获取一个G,当Global队列中也没有待运行的G时,则尝试从其它的P窃取部分G来执行相当于P之间的负载均衡.",-1),en=(0,t._)("h2",{id:"_1-9-gmp-的数量问题",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-9-gmp-的数量问题","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.9. GMP 的数量问题?")],-1),cn=(0,t._)("h3",{id:"_1-9-1-p-的数量问题",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-9-1-p-的数量问题","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.9.1. P 的数量问题")],-1),on=(0,t._)("p",null,"默认是 CPU 核心数,由启动时环境变量 goMAXPROCS 或者是由runtime.goMAXPROCS()决定",-1),ln=(0,t._)("h3",{id:"_1-9-2-m-的数量问题",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-9-2-m-的数量问题","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.9.2. M 的数量问题")],-1),pn=(0,t._)("ol",null,[(0,t._)("li",null,"go 语⾔本身是限定 M 的最⼤量是 10000"),(0,t._)("li",null,[(0,t.Uk)("runtime/debug 包中的 SetMaxThreads 函数来设置, "),(0,t._)("code",null,"debug.SetMaxThreads()"),(0,t.Uk)(" 方法可以让我们修改最大线程数值.")]),(0,t._)("li",null,"有⼀个 M 阻塞,会创建⼀个新的 M"),(0,t._)("li",null,"如果有 M 空闲,那么就会回收或者等待")],-1),un=(0,t._)("h3",{id:"_1-9-3-g-的数量问题",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-9-3-g-的数量问题","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.9.3. G 的数量问题")],-1),_n=(0,t._)("h4",{id:"_1-9-3-1-怎么查看goroutine的数量",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-9-3-1-怎么查看goroutine的数量","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.9.3.1. 怎么查看goroutine的数量")],-1),kn=(0,t._)("p",null,"Numgoroutine可以查看goroutine的数量.",-1),rn=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// Numgoroutine返回当前存在的goroutine数量."),(0,t.Uk)("\nfmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("runtime"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"NumGoroutine"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"//goMAXPROCS设置可以执行的cpu的最大数量"),(0,t.Uk)("\n fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("runtime"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"GOMAXPROCS"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},")"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(" \n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br")])],-1),bn=(0,t._)("h4",{id:"_1-9-3-2-怎么限制goroutine的数量",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-9-3-2-怎么限制goroutine的数量","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.9.3.2. 怎么限制goroutine的数量")],-1),Un=(0,t._)("p",null,"可以使用 channel+WaitGroup 限制goroutine的数量",-1),mn=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" wg "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(" sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("WaitGroup"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n ch "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"bool"),(0,t._)("span",{class:"token punctuation"},","),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  ch "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("j "),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"j %d \\n"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" j"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("ch\n   wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Wait"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br")])],-1),dn=(0,t._)("h2",{id:"_1-10-通道-channel",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-10-通道-channel","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.10. 通道(channel)")],-1),gn=(0,t._)("p",null,"channel 是 goroutine 之间的通信队列,可以使用 channel 在多个 goroutine 之间传递信息",-1),hn=(0,t._)("p",null,"go的设计思想是: 不要通过共享内存来通信(加锁), 而是通过通信来共享内存(channel), 设计channel的主要目的就是在多任务间传递数据的,本身就是安全的.",-1),fn=(0,t._)("h3",{id:"_1-10-1-通道分为无缓存通道和有缓存通道",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-10-1-通道分为无缓存通道和有缓存通道","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.10.1. 通道分为无缓存通道和有缓存通道")],-1),wn=(0,t._)("ol",null,[(0,t._)("li",null,"无缓冲通道没有缓冲, 发送和接收需要同步.发送阻塞直到数据被接收,接收阻塞数据直到数据被读取."),(0,t._)("li",null,"有缓冲通道不要求发送和接收操作同步.当缓冲满时发送阻塞,当缓冲空时接收阻塞.")],-1),yn=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token comment"},"// 无缓冲通道"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n ch "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token comment"},"// 接收者"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  v "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("ch "),(0,t._)("span",{class:"token comment"},"// 这里阻塞"),(0,t.Uk)("\n  fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"收到："'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" v"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n "),(0,t._)("span",{class:"token comment"},"// 发送者"),(0,t.Uk)("\n ch "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"发送："'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 收到： 1"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 发送： 1"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 有缓冲通道"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n ch "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token comment"},"// 发送者"),(0,t.Uk)("\n ch "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"发送："'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n "),(0,t._)("span",{class:"token comment"},"// 接收者"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  v "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("ch "),(0,t._)("span",{class:"token comment"},"// 这里阻塞"),(0,t.Uk)("\n  fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"收到："'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" v"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 发送： 1"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"32"),(0,t._)("br")])],-1),xn=(0,t._)("h3",{id:"_1-10-2-通道的关闭-close",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-10-2-通道的关闭-close","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.10.2. 通道的关闭, close()")],-1),vn=(0,t._)("p",null,"close函数关闭channel, 关闭后, 无法向channel再发送数据,可以继续从channel接收数据, 对于nil channel,无论收发都会被阻塞.",-1),Pn=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n chan1 "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"5"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n chan1 "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("chan1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token boolean"},"_"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("chan1\n"),(0,t._)("span",{class:"token comment"},"//  ok值表示是否读取成功, 如果 ok 的值为 false,则表示未读取到值, 通道已关闭."),(0,t.Uk)("\n  fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ok"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"!"),(0,t.Uk)("ok "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"channel closed!"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"break"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// true"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// false"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// channel closed!"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br")])],-1),Cn=(0,t._)("h3",{id:"_1-10-3-超时处理",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-10-3-超时处理","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.10.3. 超时处理")],-1),Gn=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t.Uk)("ch "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 首先实现并执行一个匿名的超时等待函数"),(0,t.Uk)("\ntimeout "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"bool"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1e9"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 等待 1 秒"),(0,t.Uk)("\n    timeout "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"true"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 然后把 timeout 这个 channel 利用起来"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("ch"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 从 ch 中读取到数据"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(" timeout"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 一直没有从 ch 中读取到数据,但从 timeout 中读取到了数据"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Timeout occurred."'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// Timeout occurred."),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br")])],-1),Wn=(0,t._)("h2",{id:"_1-11-go-channel为什么是安全的",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-11-go-channel为什么是安全的","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.11. go channel为什么是安全的?")],-1),Mn=(0,t._)("p",null,"channel 发送和接收数据都是原子性的. channel内部维护了一个互斥锁,来保证线程安全",-1),Rn=(0,t._)("h2",{id:"_1-12-对已经关闭的的-chan-进行读写-会怎么样-为什么",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-12-对已经关闭的的-chan-进行读写-会怎么样-为什么","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.12. 对已经关闭的的 chan 进行读写,会怎么样?为什么?")],-1),Sn=(0,t._)("ol",null,[(0,t._)("li",null,[(0,t._)("p",null,"读已经关闭的 chan, 如果 chan 关闭前,buffer 内有未读数据, 会读取 chan 内的值,且返回的第二个 bool 值为 true.")]),(0,t._)("li",null,[(0,t._)("p",null,"读已经关闭的 chan, 如果 chan 关闭前,buffer 内没有未读数据, 所有接收的值都会非阻塞直接成功,返回 channel 元素的零值,但是第二个 bool 值一直为 false."),(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    c "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    c "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("c"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    num"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("c\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"第一次读取chan的协程,num=%v, ok=%v\\n"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" num"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    num1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok1 "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("c\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"第二次读取chan的协程,num=%v, ok=%v\\n"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" num1"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    num2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok2 "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("c\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"第三次读取chan的协程,num=%v, ok=%v\\n"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" num2"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 第一次读取chan的协程,num=1, ok=true"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第二次读取chan的协程,num=0, ok=false"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第三次读取chan的协程,num=0, ok=false"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br")])])]),(0,t._)("li",null,[(0,t._)("p",null,"写已经关闭的 chan 会 panic"),(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    c "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("c"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    c "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br")])])])],-1),Dn=(0,t._)("h2",{id:"_1-13-等待组-waitgroup",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-13-等待组-waitgroup","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.13. 等待组 WaitGroup")],-1),An=(0,t._)("p",null,"WaitGroup 主要用于同步多个协程间的状态, 例如等待所有协程都执行完.在 WaitGroup 对象实现中,内部有一个计数器,最初从 0 开始,它有三个方法:",-1),On=(0,t._)("ol",null,[(0,t._)("li",null,"Add():计数器加一"),(0,t._)("li",null,"Done():计数器减一"),(0,t._)("li",null,"Wait():等待计数器清零. 执行Wait 方法的函数在等待组内部计数器不为 0 的时候会阻塞,一旦计数器为 0 了,程序就会继续往下执行.")],-1),Tn=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    wg "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("WaitGroup"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    num "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"10"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("num"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(" num"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i "),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n            wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Wait"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br")])],-1),qn=(0,t._)("h2",{id:"_1-14-sync-once-与-init-区别",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-14-sync-once-与-init-区别","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.14. sync.Once 与 init() 区别")],-1),Nn=(0,t._)("ol",null,[(0,t._)("li",null,"sync.Once是在代码运行中需要的时候执行,且只执行一次."),(0,t._)("li",null,"init函数是在文件包首次被加载的时候执行,且只执行一次."),(0,t._)("li",null,"可以使用sync.Once实现单例模式")],-1),Ln=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"package"),(0,t.Uk)(" main\n\n"),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("\n "),(0,t._)("span",{class:"token string"},'"fmt"'),(0,t.Uk)("\n "),(0,t._)("span",{class:"token string"},'"sync"'),(0,t.Uk)("\n "),(0,t._)("span",{class:"token string"},'"time"'),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" once sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Once\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"10"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   once"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Do"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("read"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"read"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// output:"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"//  1"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br")])],-1),In=(0,t._)("h2",{id:"_1-15-golang并发-选channel还是选锁",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-15-golang并发-选channel还是选锁","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.15. golang并发,选channel还是选锁")],-1),Bn=(0,t._)("p",null,"channel是设计在语言特性中的,并发问题优先使用通道, 如果通过通道解决不了的, 必须使用共享内存来实现并发的,才考虑锁机制",-1),Vn=(0,t._)("ol",null,[(0,t._)("li",null,"channel的能力是让数据流动起来,擅长的是数据流动的场景 e.g. 传递数据的所有权,即把某个数据发送给其他协程"),(0,t._)("li",null,"mutex的能力是数据保持不变,某段时间只给一个协程访问数据的权限, 擅长数据位置固定的场景 e.g. 缓存")],-1),En=(0,t._)("h2",{id:"_1-16-golang-的锁机制",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-16-golang-的锁机制","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.16. golang 的锁机制")],-1),Fn=(0,t._)("p",null,"golang 中的有两种锁, 为互斥锁 sync.Mutex 和读写锁 sync.RWMutex. 两者都是悲观锁",-1),Hn=(0,t._)("h3",{id:"_1-16-1-互斥锁和读写锁区别",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-16-1-互斥锁和读写锁区别","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.16.1. 互斥锁和读写锁区别")],-1),Kn=(0,t._)("ol",null,[(0,t._)("li",null,"互斥锁(Mutex): 用于保证在任何时刻, 都只能有一个线程访问该对象.当获取锁操作失败时,线程会进入等待,等待锁释放时被唤醒."),(0,t._)("li",null,"读写锁(RWMutex): 分为读锁和写锁.处于读操作时,可以允许多个线程同时获得读操作. 但是同一时刻只能有一个线程可以获得写锁.其它获取写锁失败的线程都会进入等待状态,直到写锁释放时被唤醒. 注意:写锁会阻塞其它读写锁.当有一个线程获得写锁时,读锁不能被其它线程获取; 写锁优先于读锁, 一旦有写锁, 则后续读锁必须等待,唤醒时优先考虑写锁.")],-1),jn=(0,t._)("h3",{id:"_1-16-2-互斥锁",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-16-2-互斥锁","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.16.2. 互斥锁")],-1),Xn=(0,t._)("p",null,"互斥锁是为了来保护一个资源不会因为并发操作而引起冲突导致数据异常. 加上 Mutex 互斥锁,要求同一时刻,仅能有一个协程对数据操作.",-1),Zn=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token comment"},"// 没有互斥锁之前, 三个协程在执行时,先读取 count 再更新 count 的值,而这个过程并不具备原子性,"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 所以导致了数据的不准确.解决这个问题的方法,就是给 add 这个函数加上 Mutex 互斥锁,要求同一时"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 刻,仅能有一个协程能对 count 操作. "),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token string"},'"fmt"'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token string"},'"sync"'),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("count "),(0,t._)("span",{class:"token operator"},"*"),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" wg "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)("sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("WaitGroup"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" lock "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)("sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Mutex"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1000"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        lock"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Lock"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)("count "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)("count "),(0,t._)("span",{class:"token operator"},"+"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n        lock"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Unlock"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" wg sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("WaitGroup\n    lock "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"&"),(0,t.Uk)("sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Mutex"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    count "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"3"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token operator"},"&"),(0,t.Uk)("count"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"&"),(0,t.Uk)("wg"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" lock"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token operator"},"&"),(0,t.Uk)("count"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"&"),(0,t.Uk)("wg"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" lock"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token operator"},"&"),(0,t.Uk)("count"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"&"),(0,t.Uk)("wg"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" lock"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Wait"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"count 的值为:"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" count"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br")])],-1),Yn=(0,t._)("h4",{id:"_1-16-2-1-注意事项",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-16-2-1-注意事项","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.16.2.1. 注意事项")],-1),zn=(0,t._)("ol",null,[(0,t._)("li",null,"同一协程里,不要在尚未解锁时再次加锁"),(0,t._)("li",null,"同一协程里,不要对已解锁的锁再次解锁"),(0,t._)("li",null,"加了锁后,别忘了解锁,必要时使用 defer 语句")],-1),Jn=(0,t._)("h3",{id:"_1-16-3-读写锁",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-16-3-读写锁","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.16.3. 读写锁")],-1),Qn=(0,t._)("p",null,"读写锁是分别针对读操作和写操作进行锁定和解锁操作的互斥锁, 适用于读多于写少的场景",-1),$n=(0,t._)("ol",null,[(0,t._)("li",null,"读锁:调用 RLock 方法开启锁,调用 RUnlock 释放锁"),(0,t._)("li",null,"写锁:调用 Lock 方法开启锁,调用 Unlock 释放锁(和 Mutex类似)")],-1),ns=(0,t._)("h4",{id:"_1-16-3-1-基本原则-读写互斥",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-16-3-1-基本原则-读写互斥","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.16.3.1. 基本原则: 读写互斥")],-1),ss=(0,t._)("ol",null,[(0,t._)("li",null,"写锁定情况下，对读写锁进行读锁定或者写锁定，都将阻塞；"),(0,t._)("li",null,"读锁定情况下，对读写锁进行写锁定，将阻塞；进行读锁定时不会阻塞, 支持多个并发读操作")],-1),as=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"package"),(0,t.Uk)(" main\n\n"),(0,t._)("span",{class:"token keyword"},"import"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token string"},'"fmt"'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token string"},'"sync"'),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token string"},'"time"'),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    lock "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"&"),(0,t.Uk)("sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("RWMutex"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n    lock"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Lock"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"4"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i "),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n            fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"第 %d 个协程准备开始... \\n"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n            lock"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"RLock"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n            fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"第 %d 个协程获得读锁, sleep 1s 后,释放锁\\n"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n            time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n            lock"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"RUnlock"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n        "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("i"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n    time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"准备释放写锁,读锁不再阻塞"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 写锁一释放,读锁就自由了"),(0,t.Uk)("\n    lock"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Unlock"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n    "),(0,t._)("span",{class:"token comment"},"// 由于会等到读锁全部释放,才能获得写锁"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 因为这里一定会在上面 4 个协程全部完成才能往下走"),(0,t.Uk)("\n    lock"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Lock"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"程序退出..."'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    lock"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Unlock"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 第 1 个协程准备开始..."),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第 0 个协程准备开始..."),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第 3 个协程准备开始..."),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第 2 个协程准备开始..."),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 准备释放写锁,读锁不再阻塞"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第 2 个协程获得读锁, sleep 1s 后,释放锁"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第 3 个协程获得读锁, sleep 1s 后,释放锁"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第 1 个协程获得读锁, sleep 1s 后,释放锁"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 第 0 个协程获得读锁, sleep 1s 后,释放锁"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 程序退出..."),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"32"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"33"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"34"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"35"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"36"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"37"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"38"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"39"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"40"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"41"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"42"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"43"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"44"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"45"),(0,t._)("br")])],-1),ts=(0,t._)("h2",{id:"_1-17-乐观锁和悲观锁",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-17-乐观锁和悲观锁","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.17. 乐观锁和悲观锁")],-1),es=(0,t._)("p",null,"乐观锁和悲观锁是两种思想,用于解决并发场景下的数据竞争问题.",-1),cs=(0,t._)("h3",{id:"_1-17-1-乐观锁",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-17-1-乐观锁","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.17.1. 乐观锁")],-1),os=(0,t._)("p",null,"对于同一个数据的并发操作, 乐观锁认为自己在使用数据时不会有别的线程修改数据,所以不会添加锁,只是在更新数据的时候去判断之前有没有别的线程更新了这个数据. 乐观锁适用于读多写少的应用场景,这样可以提高吞吐量.",-1),ls=(0,t._)("h3",{id:"_1-17-2-悲观锁",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-17-2-悲观锁","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.17.2. 悲观锁")],-1),ps=(0,t._)("p",null,"对于同一个数据的并发操作,悲观锁认为自己在使用数据的时候一定有别的线程来修改数据,因此在获取数据的时候会先加锁,确保数据不会被别的线程修改",-1),us=(0,t._)("h2",{id:"_1-18-在go函数中为什么会发生内存泄露-goroutine泄露",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-18-在go函数中为什么会发生内存泄露-goroutine泄露","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.18. 在go函数中为什么会发生内存泄露(goroutine泄露)")],-1),_s=(0,t._)("p",null,"go的并发是以goroutine和channel的形式实现的, goroutine需要维护执行用户代码的上下文信息.在运行过程中需要消耗一定的内存来保存这类信息. 因此,如果一个程序持续不断地产生新的 goroutine,且不结束已经创建的 goroutine,最终导致会内存耗尽,程序崩溃. 可以借助 pprof 排查",-1),ks=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i "),(0,t._)("span",{class:"token operator"},"<"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"10000"),(0,t._)("span",{class:"token punctuation"},";"),(0,t.Uk)(" i"),(0,t._)("span",{class:"token operator"},"++"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br")])],-1),is=(0,t._)("h2",{id:"_1-19-select-可以用于什么",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-19-select-可以用于什么","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.19. select 可以用于什么?")],-1),rs=(0,t._)("p",null,"select 用来监听和 channel 有关的 IO 操作，当 IO 操作发生时，触发相应的动作, select 只能应用于 channel 的操作, 可以用于监听 channel 的数据接收和发送.",-1),bs=(0,t._)("p",null,"如果 select 的多个分支都满足条件,则会随机的选取一个满足条件的分支执行. 否则执行default的逻辑.",-1),Us=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 如果 chan1 成功读到数据,则进行该 case 处理语句"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(" chan1"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// 如果成功向 chan2 写入数据,则进行该 case 处理语句"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(" chan2 "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// 如果上面都没有成功,则进入default处理流程"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"default"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br")])],-1),ms=(0,t._)("h2",{id:"_1-20-goroutine的优雅退出",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-20-goroutine的优雅退出","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.20. goroutine的优雅退出")],-1),ds=(0,t._)("h3",{id:"_1-20-1-使用-for-range-退出",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-20-1-使用-for-range-退出","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.20.1. 使用 for-range 退出")],-1),gs=(0,t._)("p",null,"range能够感知channel的关闭,当channel被发送数据的协程关闭时,range就会结束,接着退出for循环.",-1),hs=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n inCh "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n inCh "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("inCh"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("in "),(0,t._)("span",{class:"token operator"},"<-"),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// Using for-range to exit goroutine"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// range has the ability to detect the close/end of a channel"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(" x "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"range"),(0,t.Uk)(" in "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Process %d\\n"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" x"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("inCh"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"1e9"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br")])],-1),fs=(0,t._)("h3",{id:"_1-20-2-使用select-case-ok退出",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-20-2-使用select-case-ok退出","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.20.2. 使用select case ,ok退出")],-1),ws=(0,t._)("p",null,"当读取数据的通道关闭时, 没有数据读取时程序会退出",-1),ys=(0,t._)("h4",{id:"_1-20-2-1-某个通道关闭后-无需处理其他case-return退出协程",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-20-2-1-某个通道关闭后-无需处理其他case-return退出协程","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.20.2.1. 某个通道关闭后, 无需处理其他case, return退出协程")],-1),xs=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n in "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("in"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n out "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// in for-select using ok to exit goroutine"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(" x"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("in"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"!"),(0,t.Uk)("ok "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n     fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Process exit %d\\n"'),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" x"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n     "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Printf"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Working \\n"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br")])],-1),vs=(0,t._)("h4",{id:"_1-20-2-2-某个通道关闭后-需要等待处理其他case-已关闭的通道设置为nil",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-20-2-2-某个通道关闭后-需要等待处理其他case-已关闭的通道设置为nil","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.20.2.2. 某个通道关闭后, 需要等待处理其他case, 已关闭的通道设置为nil")],-1),Ps=(0,t._)("p",null,"select的特性: 不会在nil的通道上进行等待. 可以把只读通道设置为nil",-1),Cs=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n in "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("in"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n out "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token builtin"},"int"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n out "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"1"),(0,t.Uk)("\n\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// in for-select using ok to exit goroutine"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"_"),(0,t._)("span",{class:"token punctuation"},","),(0,t.Uk)(" ok "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("in"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"!"),(0,t.Uk)("ok "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n     fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"in channel closed"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n     in "),(0,t._)("span",{class:"token operator"},"="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("out"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Working"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n   "),(0,t._)("span",{class:"token comment"},"// If both in channel are closed, goroutine exit"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" in "),(0,t._)("span",{class:"token operator"},"=="),(0,t.Uk)(),(0,t._)("span",{class:"token boolean"},"nil"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"in channel closed return"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// Working"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// in channel closed"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// in channel closed return"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"32"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"33"),(0,t._)("br")])],-1),Gs=(0,t._)("h3",{id:"_1-20-3-使用退出通道退出",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-20-3-使用退出通道退出","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.20.3. 使用退出通道退出")],-1),Ws=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"worker"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("stopCh "),(0,t._)("span",{class:"token operator"},"<-"),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"struct"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"defer"),(0,t.Uk)(" fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"worker exit"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  t "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(" time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"NewTicker"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Millisecond "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"500"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// Using stop channel explicit exit"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"select"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("stopCh"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Recv stop signal"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token keyword"},"case"),(0,t.Uk)(),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)("t"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("C"),(0,t._)("span",{class:"token punctuation"},":"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Working ."'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"return"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n stopCh "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"struct"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"worker"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("stopCh"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second "),(0,t._)("span",{class:"token operator"},"*"),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("stopCh"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n\n "),(0,t._)("span",{class:"token comment"},"// Wait some print"),(0,t.Uk)("\n time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Sleep"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("time"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("Second"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"main exit"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// 显式关闭通道 stopCh 可以处理主动通知协程退出的场景。只要 main() 执行关闭 stopCh，每一个 worker 都会都到信号，进而关闭"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"28"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"29"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"30"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"31"),(0,t._)("br")])],-1),Ms=(0,t._)("h3",{id:"_1-20-4-总结",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-20-4-总结","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.20.4. 总结")],-1),Rs=(0,t._)("ol",null,[(0,t._)("li",null,"发送协程主动关闭通道,接收协程不关闭通道."),(0,t._)("li",null,"协程处理1个通道,并且是读时,协程优先使用for-range,因为range可以关闭通道,自动退出协程."),(0,t._)("li",null,"_,ok可以处理多个读通道关闭,需要关闭当前使用for-select的协程."),(0,t._)("li",null,"显式关闭通道 stopCh 可以处理主动通知协程退出的场景。")],-1),Ss=(0,t._)("h2",{id:"_1-21-如何让所有子协程执行完后再执行主协程",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-21-如何让所有子协程执行完后再执行主协程","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.21. 如何让所有子协程执行完后再执行主协程")],-1),Ds=(0,t._)("p",null,"子协程不会执行",-1),As=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 子协程"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"son goroutine......"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"token comment"},"// 主协程"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"main goroutine...."'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br")])],-1),Os=(0,t._)("h3",{id:"_1-21-1-channel-实现同步",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-21-1-channel-实现同步","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.21.1. channel 实现同步")],-1),Ts=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"package"),(0,t.Uk)(" main\n\n"),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n ch "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"make"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token keyword"},"chan"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"struct"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n count "),(0,t._)("span",{class:"token operator"},":="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"2"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// count 表示活动的协程个数"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Goroutine 1"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  ch "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"struct"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 协程结束，发出信号"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Goroutine 2"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  ch "),(0,t._)("span",{class:"token operator"},"<-"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"struct"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"{"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 协程结束，发出信号"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token keyword"},"for"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"range"),(0,t.Uk)(" ch "),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// 每次从ch中接收数据，表明一个活动的协程结束"),(0,t.Uk)("\n  count"),(0,t._)("span",{class:"token operator"},"--"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token comment"},"// 当所有活动的协程都结束时，关闭管道"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"if"),(0,t.Uk)(" count "),(0,t._)("span",{class:"token operator"},"=="),(0,t.Uk)(),(0,t._)("span",{class:"token number"},"0"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n   "),(0,t._)("span",{class:"token function"},"close"),(0,t._)("span",{class:"token punctuation"},"("),(0,t.Uk)("ch"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n"),(0,t._)("span",{class:"token comment"},"// count 表示有多少个协程"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// ch 用来子协程与主协程之间的同步"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 主协程阻塞等待数据,每当一个子协程执行完后,就会往 ch 里面写一个数据,主协程收到后会使 count–,"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token comment"},"// 当 count 减为 0,关闭 ch,主协程将不阻塞在 range ch."),(0,t.Uk)("\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"19"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"20"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"21"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"22"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"23"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"24"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"25"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"26"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"27"),(0,t._)("br")])],-1),qs=(0,t._)("h3",{id:"_1-21-2-sync-waitgroup-实现等待",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-21-2-sync-waitgroup-实现等待","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.21.2. sync.WaitGroup 实现等待")],-1),Ns=(0,t._)("p",null,"sync.WaitGroup 内部是实现了一个计数器,它有三个方法",-1),Ls=(0,t._)("ol",null,[(0,t._)("li",null,"Add() 用来设置一个计数"),(0,t._)("li",null,"Done() 用来在操作结束时调用,使计数减 1"),(0,t._)("li",null,"Wait() 用来等待所有的操作结束,即计数变为 0.")],-1),Is=(0,t._)("div",{class:"language-go ext-go line-numbers-mode"},[(0,t._)("pre",{class:"language-go"},[(0,t._)("code",null,[(0,t._)("span",{class:"token keyword"},"package"),(0,t.Uk)(" main\n\n"),(0,t._)("span",{class:"token comment"},"// 使用 sync.WaitGroup 的方式来实现主协程等待其他子协程"),(0,t.Uk)("\n\n "),(0,t._)("span",{class:"token keyword"},"func"),(0,t.Uk)(),(0,t._)("span",{class:"token function"},"main"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"var"),(0,t.Uk)(" wg sync"),(0,t._)("span",{class:"token punctuation"},"."),(0,t.Uk)("WaitGroup\n  wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Add"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token number"},"2"),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 因为有两个动作，所以增加2个计数"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Goroutine 1"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 操作完成，减少一个计数"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token keyword"},"go"),(0,t.Uk)(),(0,t._)("span",{class:"token keyword"},"func"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token punctuation"},"{"),(0,t.Uk)("\n    fmt"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Println"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token string"},'"Goroutine 2"'),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n    wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Done"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 操作完成，减少一个计数"),(0,t.Uk)("\n  "),(0,t._)("span",{class:"token punctuation"},"}"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)("\n  wg"),(0,t._)("span",{class:"token punctuation"},"."),(0,t._)("span",{class:"token function"},"Wait"),(0,t._)("span",{class:"token punctuation"},"("),(0,t._)("span",{class:"token punctuation"},")"),(0,t.Uk)(),(0,t._)("span",{class:"token comment"},"// 等待，直到计数为0"),(0,t.Uk)("\n"),(0,t._)("span",{class:"token punctuation"},"}"),(0,t.Uk)("\n\n")])]),(0,t._)("div",{class:"line-numbers"},[(0,t._)("span",{class:"line-number"},"1"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"2"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"3"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"4"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"5"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"6"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"7"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"8"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"9"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"10"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"11"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"12"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"13"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"14"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"15"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"16"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"17"),(0,t._)("br"),(0,t._)("span",{class:"line-number"},"18"),(0,t._)("br")])],-1),Bs=(0,t._)("h2",{id:"_1-22-知道哪些-sync-同步原语-各有什么作用",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-22-知道哪些-sync-同步原语-各有什么作用","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.22. 知道哪些 sync 同步原语?各有什么作用?")],-1),Vs=(0,t._)("p",null,"sync 包中提供了用于同步的一些基本原语,包括常见的互斥锁 Mutex 与读写互斥锁 RWMutex 以及 Once,WaitGroup. 原语,一般是指由若干条指令组成的程序段,用来实现某个特定功能,在执行过程中不可被中断",-1),Es={},Fs=(0,a(3744).Z)(Es,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)(t.HY,null,[o,l,p,u,_,k,i,r,b,U,m,d,g,h,f,w,y,x,v,P,C,G,W,M,R,S,D,A,O,T,q,N,L,I,B,V,E,F,H,K,j,X,Z,Y,z,J,Q,$,nn,sn,an,tn,en,cn,on,ln,pn,un,_n,kn,rn,bn,Un,mn,dn,gn,hn,fn,wn,yn,xn,vn,Pn,Cn,Gn,Wn,Mn,Rn,Sn,Dn,An,On,Tn,qn,Nn,Ln,In,Bn,Vn,En,Fn,Hn,Kn,jn,Xn,Zn,Yn,zn,Jn,Qn,$n,ns,ss,as,ts,es,cs,os,ls,ps,us,_s,ks,is,rs,bs,Us,ms,ds,gs,hs,fs,ws,ys,xs,vs,Ps,Cs,Gs,Ws,Ms,Rs,Ss,Ds,As,Os,Ts,qs,Ns,Ls,Is,Bs,Vs],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}},2377:(n,s,a)=>{n.exports=a.p+"assets/img/1647609486264.7fd40f2d.png"},5882:(n,s,a)=>{n.exports=a.p+"assets/img/1648438385912.3f386efd.png"}}]);