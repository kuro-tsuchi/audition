"use strict";(self.webpackChunkaudition=self.webpackChunkaudition||[]).push([[18],{5689:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-f10b7418",path:"/additional/linux.html",title:"1. linux",lang:"en-EN",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.1. 文件和目录",slug:"_1-1-文件和目录",children:[{level:3,title:"1.1.1. cd 命令",slug:"_1-1-1-cd-命令",children:[]},{level:3,title:"1.1.2. pwd 命令",slug:"_1-1-2-pwd-命令",children:[]},{level:3,title:"1.1.3. ls 命令 (list)",slug:"_1-1-3-ls-命令-list",children:[]},{level:3,title:"1.1.4. cp 命令 (copy)",slug:"_1-1-4-cp-命令-copy",children:[]},{level:3,title:"1.1.5. mv 命令 (move)",slug:"_1-1-5-mv-命令-move",children:[]},{level:3,title:"1.1.6. rm 命令 (remove)",slug:"_1-1-6-rm-命令-remove",children:[]}]},{level:2,title:"1.2. 查看文件内容",slug:"_1-2-查看文件内容",children:[{level:3,title:"1.2.1. cat 命令",slug:"_1-2-1-cat-命令",children:[]}]},{level:2,title:"1.3. 文件搜索",slug:"_1-3-文件搜索",children:[{level:3,title:"1.3.1. find 命令",slug:"_1-3-1-find-命令",children:[]}]},{level:2,title:'1.4. 文件的权限 - 使用 "+" 设置权限，使用 "-" 用于取消',slug:"_1-4-文件的权限-使用-设置权限-使用-用于取消",children:[{level:3,title:"1.4.1. chmod 命令",slug:"_1-4-1-chmod-命令",children:[]},{level:3,title:"1.4.2. chown 命令",slug:"_1-4-2-chown-命令",children:[]},{level:3,title:"1.4.3. chgrp 命令",slug:"_1-4-3-chgrp-命令",children:[]}]},{level:2,title:"1.5. 文本处理",slug:"_1-5-文本处理",children:[{level:3,title:"1.5.1. grep 命令",slug:"_1-5-1-grep-命令",children:[]},{level:3,title:"1.5.2. tail",slug:"_1-5-2-tail",children:[]},{level:3,title:"1.5.3. more",slug:"_1-5-3-more",children:[]},{level:3,title:"1.5.4. less",slug:"_1-5-4-less",children:[]},{level:3,title:"1.5.5. paste 命令",slug:"_1-5-5-paste-命令",children:[]},{level:3,title:"1.5.6. sort 命令",slug:"_1-5-6-sort-命令",children:[]},{level:3,title:"1.5.7. comm 命令",slug:"_1-5-7-comm-命令",children:[]}]},{level:2,title:"1.6. 打包和压缩文件",slug:"_1-6-打包和压缩文件",children:[{level:3,title:"1.6.1. tar 命令",slug:"_1-6-1-tar-命令",children:[]}]},{level:2,title:"1.7. 系统和关机 (系统的关机，重启以及登出 )",slug:"_1-7-系统和关机-系统的关机-重启以及登出",children:[]},{level:2,title:"1.8. 进程相关的命令",slug:"_1-8-进程相关的命令",children:[{level:3,title:"1.8.1. jps 命令",slug:"_1-8-1-jps-命令",children:[]},{level:3,title:"1.8.2. ps 命令 (process)",slug:"_1-8-2-ps-命令-process",children:[]},{level:3,title:"1.8.3. kill 命令",slug:"_1-8-3-kill-命令",children:[]},{level:3,title:"1.8.4. killall 命令",slug:"_1-8-4-killall-命令",children:[]},{level:3,title:"1.8.5. top 命令",slug:"_1-8-5-top-命令",children:[]},{level:3,title:"1.8.6. 如何杀死进程",slug:"_1-8-6-如何杀死进程",children:[]},{level:3,title:"1.8.7. 查看进程端口号",slug:"_1-8-7-查看进程端口号",children:[]}]}],filePathRelative:"additional/linux.md",git:{updatedTime:1640782468e3,contributors:[{name:"shorestraydog",email:"shorestraydog@protonmail.com",commits:6}]}}},8761:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="_1-linux" tabindex="-1"><a class="header-anchor" href="#_1-linux" aria-hidden="true">#</a> 1. linux</h1><h2 id="_1-1-文件和目录" tabindex="-1"><a class="header-anchor" href="#_1-1-文件和目录" aria-hidden="true">#</a> 1.1. 文件和目录</h2><h3 id="_1-1-1-cd-命令" tabindex="-1"><a class="header-anchor" href="#_1-1-1-cd-命令" aria-hidden="true">#</a> 1.1.1. cd 命令</h3><p>它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home 进入 <span class="token string">&#39;/ home&#39;</span> 目录\n<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span> 返回上一级目录\n<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span> 返回上两级目录\n<span class="token builtin class-name">cd</span> 进入个人的主目录\n<span class="token builtin class-name">cd</span> ~user1 进入个人的主目录\n<span class="token builtin class-name">cd</span> - 返回上次所在的目录\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_1-1-2-pwd-命令" tabindex="-1"><a class="header-anchor" href="#_1-1-2-pwd-命令" aria-hidden="true">#</a> 1.1.2. pwd 命令</h3><p>pwd 显示工作路径</p><h3 id="_1-1-3-ls-命令-list" tabindex="-1"><a class="header-anchor" href="#_1-1-3-ls-命令-list" aria-hidden="true">#</a> 1.1.3. ls 命令 (list)</h3><p>查看文件与目录的命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> 查看目录中的文件\n<span class="token function">ls</span> -l 显示文件和目录的详细资料\n<span class="token function">ls</span> -a 列出全部文件，包含隐藏文件\n<span class="token function">ls</span> -R 连同子目录的内容一起列出 <span class="token punctuation">(</span>递归列出<span class="token punctuation">)</span>,等于该目录下的所有文件都会显示出来\n<span class="token function">ls</span> <span class="token punctuation">[</span><span class="token number">0</span>-9<span class="token punctuation">]</span> 显示包含数字的文件名和目录名\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_1-1-4-cp-命令-copy" tabindex="-1"><a class="header-anchor" href="#_1-1-4-cp-命令-copy" aria-hidden="true">#</a> 1.1.4. cp 命令 (copy)</h3><p>用于复制文件，它还可以把多个文件一次性地复制到一个目录下</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>-a :将文件的特性一起复制\n-p :连同文件的属性一起复制，而非使用默认方式，与-a 相似，常用于备份\n-i :若目标文件已经存在时，在覆盖时会先询问操作的进行\n-r :递归持续复制，用于目录的复制行为\n-u :目标文件与源文件有差异时才会复制\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_1-1-5-mv-命令-move" tabindex="-1"><a class="header-anchor" href="#_1-1-5-mv-命令-move" aria-hidden="true">#</a> 1.1.5. mv 命令 (move)</h3><p>用于移动文件，目录或更名</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>-f :force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖\n-i :若目标文件已经存在，就会询问是否覆盖\n-u :若目标文件已经存在，且比目标文件新，才会更新\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-1-6-rm-命令-remove" tabindex="-1"><a class="header-anchor" href="#_1-1-6-rm-命令-remove" aria-hidden="true">#</a> 1.1.6. rm 命令 (remove)</h3><p>用于删除文件或目录</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>-f :就是 force 的意思，忽略不存在的文件，不会出现警告消息\n-i :互动模式，在删除前会询问用户是否操作\n-r :递归删除，最常用于目录删除，它是一个非常危险的参数\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_1-2-查看文件内容" tabindex="-1"><a class="header-anchor" href="#_1-2-查看文件内容" aria-hidden="true">#</a> 1.2. 查看文件内容</h2><h3 id="_1-2-1-cat-命令" tabindex="-1"><a class="header-anchor" href="#_1-2-1-cat-命令" aria-hidden="true">#</a> 1.2.1. cat 命令</h3><p>用于查看文本文件的内容，后接要查看的文件名，通常可用管道与 more 和 less 一起使用</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cat</span> file1 从第一个字节开始正向查看文件的内容\n<span class="token function">tac</span> file1 从最后一行开始反向查看一个文件的内容\n<span class="token function">cat</span> -n file1 标示文件的行数\n<span class="token function">more</span> file1 查看一个长文件的内容\n<span class="token function">head</span> -n <span class="token number">2</span> file1 查看一个文件的前两行\n<span class="token function">tail</span> -n <span class="token number">2</span> file1 查看一个文件的最后两行\n<span class="token function">tail</span> -n +1000 file1 从 <span class="token number">1000</span> 行开始显示，显示 <span class="token number">1000</span> 行以后的\n<span class="token function">cat</span> filename <span class="token operator">|</span> <span class="token function">head</span> -n <span class="token number">3000</span> <span class="token operator">|</span> <span class="token function">tail</span> -n +1000 显示 <span class="token number">1000</span> 行到 <span class="token number">3000</span> 行\n<span class="token function">cat</span> filename <span class="token operator">|</span> <span class="token function">tail</span> -n +3000 <span class="token operator">|</span> <span class="token function">head</span> -n <span class="token number">1000</span> 从第 <span class="token number">3000</span> 行开始，显示 <span class="token number">1000</span><span class="token punctuation">(</span>即显示 <span class="token number">3000</span>~3999 行<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_1-3-文件搜索" tabindex="-1"><a class="header-anchor" href="#_1-3-文件搜索" aria-hidden="true">#</a> 1.3. 文件搜索</h2><h3 id="_1-3-1-find-命令" tabindex="-1"><a class="header-anchor" href="#_1-3-1-find-命令" aria-hidden="true">#</a> 1.3.1. find 命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">find</span> / -name file1 从 <span class="token string">&#39;/&#39;</span> 开始进入根文件系统搜索文件和目录\n<span class="token function">find</span> / -user user1 搜索属于用户 <span class="token string">&#39;user1&#39;</span> 的文件和目录\n<span class="token function">find</span> /usr/bin -type f -atime +100 搜索在过去 <span class="token number">100</span> 天内未被使用过的执行文件\n<span class="token function">find</span> /usr/bin -type f -mtime -10 搜索在 <span class="token number">10</span> 天内被创建或者修改过的文件\n<span class="token function">whereis</span> <span class="token function">halt</span> 显示一个二进制文件，源码或 <span class="token function">man</span> 的位置\n<span class="token function">which</span> <span class="token function">halt</span> 显示一个二进制文件或可执行文件的完整路径\n删除大于 50M 的文件：\n<span class="token function">find</span> /var/mail/ -size +50M -exec <span class="token function">rm</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> ＼<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_1-4-文件的权限-使用-设置权限-使用-用于取消" tabindex="-1"><a class="header-anchor" href="#_1-4-文件的权限-使用-设置权限-使用-用于取消" aria-hidden="true">#</a> 1.4. 文件的权限 - 使用 &quot;+&quot; 设置权限，使用 &quot;-&quot; 用于取消</h2><h3 id="_1-4-1-chmod-命令" tabindex="-1"><a class="header-anchor" href="#_1-4-1-chmod-命令" aria-hidden="true">#</a> 1.4.1. chmod 命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> -lh 显示权限\n<span class="token function">chmod</span> ugo+rwx directory1 设置目录的所有人 <span class="token punctuation">(</span>u<span class="token punctuation">)</span>,群组 <span class="token punctuation">(</span>g<span class="token punctuation">)</span> 以及其他人 <span class="token punctuation">(</span>o<span class="token punctuation">)</span> 以读 <span class="token punctuation">(</span>r,4 <span class="token punctuation">)</span>,写 <span class="token punctuation">(</span>w,2<span class="token punctuation">)</span> 和执行 <span class="token punctuation">(</span>x,1<span class="token punctuation">)</span> 的权限\n<span class="token function">chmod</span> go-rwx directory1 删除群组 <span class="token punctuation">(</span>g<span class="token punctuation">)</span> 与其他人 <span class="token punctuation">(</span>o<span class="token punctuation">)</span> 对目录的读写执行权限\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-4-2-chown-命令" tabindex="-1"><a class="header-anchor" href="#_1-4-2-chown-命令" aria-hidden="true">#</a> 1.4.2. chown 命令</h3><p>改变文件的所有者</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">chown</span> user1 file1 改变一个文件的所有人属性\n<span class="token function">chown</span> -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性\n<span class="token function">chown</span> user1:group1 file1 改变一个文件的所有人和群组属性\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-4-3-chgrp-命令" tabindex="-1"><a class="header-anchor" href="#_1-4-3-chgrp-命令" aria-hidden="true">#</a> 1.4.3. chgrp 命令</h3><p>改变文件所属用户组</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">chgrp</span> group1 file1 改变文件的群组\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_1-5-文本处理" tabindex="-1"><a class="header-anchor" href="#_1-5-文本处理" aria-hidden="true">#</a> 1.5. 文本处理</h2><h3 id="_1-5-1-grep-命令" tabindex="-1"><a class="header-anchor" href="#_1-5-1-grep-命令" aria-hidden="true">#</a> 1.5.1. grep 命令</h3><p>分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">grep</span> Aug /var/log/messages 在文件 <span class="token string">&#39;/var/log/messages&#39;</span>中查找关键词<span class="token string">&quot;Aug&quot;</span>\n<span class="token function">grep</span> ^Aug /var/log/messages 在文件 <span class="token string">&#39;/var/log/messages&#39;</span>中查找以<span class="token string">&quot;Aug&quot;</span>开始的词汇\n<span class="token function">grep</span> <span class="token punctuation">[</span><span class="token number">0</span>-9<span class="token punctuation">]</span> /var/log/messages 选择 <span class="token string">&#39;/var/log/messages&#39;</span> 文件中所有包含数字的行\n<span class="token function">grep</span> Aug -R /var/log/* 在目录 <span class="token string">&#39;/var/log&#39;</span> 及随后的目录中搜索字符串<span class="token string">&quot;Aug&quot;</span>\n<span class="token function">sed</span> <span class="token string">&#39;s/stringa1/stringa2/g&#39;</span> example.txt 将 example.txt 文件中的 <span class="token string">&quot;string1&quot;</span> 替换成 <span class="token string">&quot;string2&quot;</span>\n<span class="token function">sed</span> <span class="token string">&#39;/^$/d&#39;</span> example.txt 从 example.txt 文件中删除所有空白行 <span class="token punctuation">(</span>搜索公众号 Java 知音，回复 <span class="token string">&quot;2021&quot;</span>,送你一份 Java 面试题宝典<span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_1-5-2-tail" tabindex="-1"><a class="header-anchor" href="#_1-5-2-tail" aria-hidden="true">#</a> 1.5.2. tail</h3><p>从尾部开始展示文本，常用查看日志文件。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>-f 循环读取 <span class="token punctuation">(</span>常用于查看递增的日志文件<span class="token punctuation">)</span>\n-n<span class="token operator">&lt;</span>行数<span class="token operator">&gt;</span> 显示行数 <span class="token punctuation">(</span>从后向前<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-5-3-more" tabindex="-1"><a class="header-anchor" href="#_1-5-3-more" aria-hidden="true">#</a> 1.5.3. more</h3><p>功能类似于 cat, more 会以一页一页的显示方便使用者逐页阅读， 最基本的指令就是按空白键 (space) 就往下一页显示，按 b 键就会往回 (back) 一页显示。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">more</span> +3 text.txt <span class="token comment">#显示文件中从第 3 行起的内容</span>\n<span class="token function">ls</span> -l <span class="token operator">|</span> <span class="token function">more</span> -5  <span class="token comment">#在所列出文件目录详细信息，借助管道使每次显示 5 行</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-5-4-less" tabindex="-1"><a class="header-anchor" href="#_1-5-4-less" aria-hidden="true">#</a> 1.5.4. less</h3><p>less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ps</span> -a <span class="token operator">|</span> <span class="token function">less</span> -N  <span class="token comment">#-N  显示每行的行号   # ps 查看进程信息并通过 less 分页显示</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_1-5-5-paste-命令" tabindex="-1"><a class="header-anchor" href="#_1-5-5-paste-命令" aria-hidden="true">#</a> 1.5.5. paste 命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">paste</span> file1 file2 合并两个文件或两栏的内容\n<span class="token function">paste</span> -d <span class="token string">&#39;+&#39;</span> file1 file2 合并两个文件或两栏的内容，中间用<span class="token string">&quot;+&quot;</span>区分\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-5-6-sort-命令" tabindex="-1"><a class="header-anchor" href="#_1-5-6-sort-命令" aria-hidden="true">#</a> 1.5.6. sort 命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sort</span> file1 file2 排序两个文件的内容\n<span class="token function">sort</span> file1 file2 <span class="token operator">|</span> <span class="token function">uniq</span> 取出两个文件的并集 <span class="token punctuation">(</span>重复的行只保留一份<span class="token punctuation">)</span>\n<span class="token function">sort</span> file1 file2 <span class="token operator">|</span> <span class="token function">uniq</span> -u 删除交集，留下其他的行\n<span class="token function">sort</span> file1 file2 <span class="token operator">|</span> <span class="token function">uniq</span> -d 取出两个文件的交集 <span class="token punctuation">(</span>只留下同时存在于两个文件中的文件<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_1-5-7-comm-命令" tabindex="-1"><a class="header-anchor" href="#_1-5-7-comm-命令" aria-hidden="true">#</a> 1.5.7. comm 命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">comm</span> -1 file1 file2 比较两个文件的内容只删除 <span class="token string">&#39;file1&#39;</span> 所包含的内容\n<span class="token function">comm</span> -2 file1 file2 比较两个文件的内容只删除 <span class="token string">&#39;file2&#39;</span> 所包含的内容\n<span class="token function">comm</span> -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_1-6-打包和压缩文件" tabindex="-1"><a class="header-anchor" href="#_1-6-打包和压缩文件" aria-hidden="true">#</a> 1.6. 打包和压缩文件</h2><h3 id="_1-6-1-tar-命令" tabindex="-1"><a class="header-anchor" href="#_1-6-1-tar-命令" aria-hidden="true">#</a> 1.6.1. tar 命令</h3><p>对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序 (如 gzip 和 bzip 等) 进行压缩和解压) 推荐:250 期面试题汇总</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>-c :新建打包文件\n-t :查看打包文件的内容含有哪些文件名\n-x :解打包或解压缩的功能，可以搭配-C<span class="token punctuation">(</span>大写<span class="token punctuation">)</span> 指定解压的目录，注意-c,-t,-x 不能同时出现在同一条命令中\n-j :通过 <span class="token function">bzip2</span> 的支持进行压缩/解压缩\n-z :通过 <span class="token function">gzip</span> 的支持进行压缩/解压缩\n-v :在压缩/解压缩过程中，将正在处理的文件名显示出来\n-f filename :filename 为要处理的文件\n-C <span class="token function">dir</span> :指定压缩/解压缩的目录 <span class="token function">dir</span>\n压缩:tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称\n查询:tar -jtv -f filename.tar.bz2\n解压:tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录\nbunzip2 file1.bz2 解压一个叫做 <span class="token string">&#39;file1.bz2&#39;</span>的文件\n<span class="token function">bzip2</span> file1 压缩一个叫做 <span class="token string">&#39;file1&#39;</span> 的文件\ngunzip file1.gz 解压一个叫做 <span class="token string">&#39;file1.gz&#39;</span>的文件\n<span class="token function">gzip</span> file1 压缩一个叫做 <span class="token string">&#39;file1&#39;</span>的文件\n<span class="token function">gzip</span> -9 file1 最大程度压缩\n<span class="token function">rar</span> a file1.rar test_file 创建一个叫做 <span class="token string">&#39;file1.rar&#39;</span> 的包\n<span class="token function">rar</span> a file1.rar file1 file2 dir1 同时压缩 <span class="token string">&#39;file1&#39;</span>, <span class="token string">&#39;file2&#39;</span> 以及目录 <span class="token string">&#39;dir1&#39;</span>\n<span class="token function">rar</span> x file1.rar 解压 <span class="token function">rar</span> 包\n<span class="token function">zip</span> file1.zip file1 创建一个 <span class="token function">zip</span> 格式的压缩包\n<span class="token function">unzip</span> file1.zip 解压一个 <span class="token function">zip</span> 格式压缩包\n<span class="token function">zip</span> -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个 <span class="token function">zip</span> 格式的压缩包\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="_1-7-系统和关机-系统的关机-重启以及登出" tabindex="-1"><a class="header-anchor" href="#_1-7-系统和关机-系统的关机-重启以及登出" aria-hidden="true">#</a> 1.7. 系统和关机 (系统的关机，重启以及登出 )</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">shutdown</span> -h now 关闭系统 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\ninit <span class="token number">0</span> 关闭系统 <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\ntelinit <span class="token number">0</span> 关闭系统 <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token function">shutdown</span> -h hours:minutes <span class="token operator">&amp;</span> 按预定时间关闭系统\n<span class="token function">shutdown</span> -c 取消按预定时间关闭系统\n<span class="token function">shutdown</span> -r now 重启 <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token function">reboot</span> 重启 <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token builtin class-name">logout</span> 注销\n<span class="token function">time</span> 测算一个命令 <span class="token punctuation">(</span>即程序<span class="token punctuation">)</span> 的执行时间\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="_1-8-进程相关的命令" tabindex="-1"><a class="header-anchor" href="#_1-8-进程相关的命令" aria-hidden="true">#</a> 1.8. 进程相关的命令</h2><h3 id="_1-8-1-jps-命令" tabindex="-1"><a class="header-anchor" href="#_1-8-1-jps-命令" aria-hidden="true">#</a> 1.8.1. jps 命令</h3><p>显示当前系统的 java 进程情况，及其 id 号</p><h3 id="_1-8-2-ps-命令-process" tabindex="-1"><a class="header-anchor" href="#_1-8-2-ps-命令-process" aria-hidden="true">#</a> 1.8.2. ps 命令 (process)</h3><p>用于将某个时间点的进程运行情况选取下来并输出</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>-A :所有的进程均显示出来\n-a :不与 terminal 有关的所有进程\n-u :有效用户的相关进程\n-x :一般与 a 参数一起使用，可列出较完整的信息\n-l :较长，较详细地将 PID 的信息列出\n<span class="token function">ps</span> aux <span class="token comment"># 查看系统所有的进程数据</span>\n<span class="token function">ps</span> ax <span class="token comment"># 查看不与 terminal 有关的所有进程</span>\n<span class="token function">ps</span> -lA <span class="token comment"># 查看系统所有的进程数据</span>\n<span class="token function">ps</span> axjf <span class="token comment"># 查看连同一部分进程树状态` &lt;/pre&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_1-8-3-kill-命令" tabindex="-1"><a class="header-anchor" href="#_1-8-3-kill-命令" aria-hidden="true">#</a> 1.8.3. kill 命令</h3><p>用于向某个工作 (%jobnumber) 或者是某个 PID(数字) 传送一个信号，它通常与 ps 和 jobs 命令一起使用</p><h3 id="_1-8-4-killall-命令" tabindex="-1"><a class="header-anchor" href="#_1-8-4-killall-命令" aria-hidden="true">#</a> 1.8.4. killall 命令</h3><p>向一个命令启动的进程发送一个信号</p><h3 id="_1-8-5-top-命令" tabindex="-1"><a class="header-anchor" href="#_1-8-5-top-命令" aria-hidden="true">#</a> 1.8.5. top 命令</h3><p>Linux 下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于 Windows 的任务管理器。</p><h3 id="_1-8-6-如何杀死进程" tabindex="-1"><a class="header-anchor" href="#_1-8-6-如何杀死进程" aria-hidden="true">#</a> 1.8.6. 如何杀死进程</h3><ul><li>kill -9 pid(-9 表示强制关闭)</li><li>killall -9 程序的名字</li><li>pkill 程序的名字</li></ul><h3 id="_1-8-7-查看进程端口号" tabindex="-1"><a class="header-anchor" href="#_1-8-7-查看进程端口号" aria-hidden="true">#</a> 1.8.7. 查看进程端口号</h3><p>netstat -tunlp|grep 端口号</p>',76),l={},p=(0,a(3744).Z)(l,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);